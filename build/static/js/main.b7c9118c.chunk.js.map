{"version":3,"sources":["components/ColumnAddNew.js","components/TaskAddNew.js","theme.js","views/TaskView.js","components/Task.js","components/TaskOverview.js","components/Column.js","views/BoardView.js","components/TableRow.js","views/TableView.js","Body.js","components/ListAddNew.js","components/TaskListItem.js","components/TaskListOverview.js","layout/SideBar.js","data.js","App.js","index.js"],"names":["ColumnAddNew","isOpen","onClose","dispatch","activeList","initialValues","columnName","validate","values","errors","onSubmit","setSubmitting","setTimeout","type","payload","touched","isSubmitting","name","field","isInvalid","placeholder","colorScheme","mr","isDisabled","isLoading","variant","onClick","TaskAddNew","onAddTask","hideTaskInput","columnId","useState","taskTitle","setTaskTitle","inputRef","useRef","useEffect","current","focus","event","preventDefault","trim","length","onBlur","ref","value","onChange","target","colors","tasks","1","2","3","4","5","6","theme","extendTheme","config","initialColorMode","useSystemColorMode","TaskView","btnRef","heading","id","title","color","owner","index","taskHandler","columns","columnTitlesToIds","selectedColor","setSelectedColor","selectedColumn","setSelectedColumn","columnRef","get","contentIsShown","handleColumnChange","colorButtons","map","colorId","align","size","border","m","bg","cursor","placement","finalFocusRef","taskId","sourceColumn","destinationColumn","mb","column","Task","onColorChange","onDeleteTask","onSubmitEditedTask","optionsAreOpen","setOptionsAreOpen","useDisclosure","onOpen","handleOptions","handleEditTask","submitEditedTask","handleDeleteTask","availableColors","onClosePopover","handleColorChange","draggableId","provided","justify","onMouseEnter","onMouseOver","pl","pt","pb","pr","borderRadius","boxShadow","height","draggableProps","innerRef","dragHandleProps","width","p","label","fontSize","textAlign","as","isTruncated","IconButton","aria-label","icon","Settings","Edit","command","Delete","TaskOverview","direction","task","Column","onColumnSubmit","onDeleteColumn","isEditingTitle","setEditingTitle","setIsOpen","toggleOptions","handleTitleSelect","prevState","handleDelete","toggleAddTask","editTitleField","handleSubmit","mt","onMouseLeave","ml","lineHeight","borderBottom","droppableId","droppableProps","BoardView","data","onDrop","display","columnOrder","taskIds","Object","bgColor","_hover","isRound","Add","TableRow","columnTitle","taskOwner","taskColor","portalRef","tableViewIsOpen","setTableViewIsOpen","containerRef","TableView","onAddNewDetailedTask","Body","taskListData","toggleMenu","isSmallerThan768","setData","view","setView","setColumnTitlesToIds","Map","taskLists","concat","createTwoWayMap","handleOnDragEnd","result","sourceIndex","source","destinationIndex","destination","toggleView","handleSubmitEditedTask","minWidth","onDragEnd","Hamburger","BsKanban","BsTable","typeAndPayload","ListAddNew","hideInput","listName","setListName","TaskListItem","onListSwitch","onListSubmit","onDelete","isEditing","setIsEditing","handleEdit","editListField","newName","flexGrow","TaskListOverview","toggleAddList","handleList","SideBar","menuIsToggled","minHeight","w","base","md","lg","xl","Close","listOrder","Programming","Work","reducer","state","action","stateCopy","newListObj","update","$merge","$push","indexToDelete","findIndex","taskList","newActiveList","find","$set","$unset","$splice","updatedTaskListNames","oldProp","newProp","old","others","renameProp","currentIndex","list","selectedList","splice","newColumn","uuidv4","newTask","newDetailedTask","console","log","updatedTask","Error","App","useReducer","initialState","appData","setMenuIsToggled","useMediaQuery","innerText","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b7c9118c.chunk.js","sourcesContent":["import {\n\tButton,\n\tModal,\n\tModalBody,\n\tModalOverlay,\n\tModalContent,\n\tModalHeader,\n\tModalFooter,\n\tInput,\n\tFormControl,\n\tFormErrorMessage\n} from '@chakra-ui/react'\nimport { Formik, Form, Field } from 'formik'\n\nconst ColumnAddNew = ({ isOpen, onClose, dispatch, activeList }) => {\n\treturn (\n\t\t<Modal isOpen={isOpen} onClose={onClose}>\n\t\t\t<ModalOverlay />\n\t\t\t<ModalContent>\n\t\t\t\t<ModalHeader>Add a column</ModalHeader>\n\t\t\t\t<Formik\n\t\t\t\t\tinitialValues={{ columnName: '' }}\n\t\t\t\t\tvalidate={values => {\n\t\t\t\t\t\tconst errors = {}\n\t\t\t\t\t\tif (!values.columnName) {\n\t\t\t\t\t\t\terrors.columnName = 'Required'\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn errors\n\t\t\t\t\t}}\n\t\t\t\t\tonSubmit={(values, { setSubmitting }) => {\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\tdispatch({type: 'addColumn', payload: { activeList, columnName: values.columnName}})\n\t\t\t\t\t\t\tsetSubmitting(false)\n\t\t\t\t\t\t\tonClose()\n\t\t\t\t\t\t}, 100)\n\t\t\t\t\t}}>\n\t\t\t\t\t{({ errors, touched, isSubmitting }) => (\n\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t<ModalBody>\n\t\t\t\t\t\t\t\t<Field name=\"columnName\">\n\t\t\t\t\t\t\t\t\t{({ field }) => (\n\t\t\t\t\t\t\t\t\t\t<FormControl isInvalid={errors.columnName && touched.columnName}>\n\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\tname=\"columnName\"\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Column name\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<FormErrorMessage>{errors.columnName}</FormErrorMessage>\n\t\t\t\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t</ModalBody>\n\t\t\t\t\t\t\t<ModalFooter>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tcolorScheme=\"blue\"\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\tmr={3}\n\t\t\t\t\t\t\t\t\tisDisabled={errors.columnName}\n\t\t\t\t\t\t\t\t\tisLoading={isSubmitting}>\n\t\t\t\t\t\t\t\t\tAdd\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<Button variant=\"ghost\" onClick={onClose}>\n\t\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</ModalFooter>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t)}\n\t\t\t\t</Formik>\n\t\t\t</ModalContent>\n\t\t</Modal>\n\t)\n}\n\nexport default ColumnAddNew\n","import { useState, useRef, useEffect } from 'react'\nimport { Flex, Input } from '@chakra-ui/react'\n\nconst TaskAddNew = ({ onAddTask, hideTaskInput, isOpen, columnId }) => {\n\tconst [taskTitle, setTaskTitle] = useState('')\n\tconst inputRef = useRef()\n\n\tuseEffect(() => {\n\t\tif (isOpen) {\n\t\t\tinputRef.current.focus()\n\t\t}\n\t}, [isOpen])\n\n\tconst handleChange = event => {\n\t\tsetTaskTitle(event.target.value)\n\t}\n\n\tconst handleSubmit = event => {\n\t\tevent.preventDefault()\n\t\tif(taskTitle.trim().length > 0) {\n\t\t\tonAddTask(taskTitle, columnId)\n\t\t\tsetTaskTitle('')\n\t\t\thideTaskInput()\n\t\t}\n\t\telse {\n\t\t\thideTaskInput()\n\t\t}\n\t}\n\n\tconst handleBlur = () => {\n\t\thideTaskInput()\n\t}\n\n\treturn (\n\t\t<form onSubmit={handleSubmit} onBlur={handleBlur}>\n\t\t\t<Flex>\n\t\t\t\t<Input\n\t\t\t\t\tref={inputRef}\n\t\t\t\t\tvalue={taskTitle}\n\t\t\t\t\tplaceholder=\"Your next task\"\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t/>\n\t\t\t</Flex>\n\t\t</form>\n\t)\n}\n\nexport default TaskAddNew\n","import { extendTheme } from '@chakra-ui/react'\n\nconst config = {\n\tinitialColorMode: 'light',\n\tuseSystemColorMode: true\n}\n\nexport const colors = {\n\ttasks: {\n\t\t1: '#F56565',\n\t\t2: '#ED8936',\n\t\t3: '#48BB78',\n\t\t4: '#38B2AC',\n\t\t5: '#4299e1',\n\t\t6: '#EAEAEA'\n\t}\n}\n\nconst theme = extendTheme({ config })\n\nexport default theme\n","import { useEffect, useRef, useState } from 'react'\nimport {\n\tButton,\n\tCircle,\n\tDrawer,\n\tDrawerBody,\n\tDrawerFooter,\n\tDrawerHeader,\n\tDrawerOverlay,\n\tDrawerContent,\n\tDrawerCloseButton,\n\tFlex,\n\tFormControl,\n\tFormErrorMessage,\n\tInput,\n\tSelect,\n\tText\n} from '@chakra-ui/react'\nimport { Formik, Form, Field } from 'formik'\nimport { colors } from '../theme'\n\nconst TaskView = ({\n\tbtnRef,\n\tisOpen,\n\tonClose,\n\theading,\n\tid,\n\ttitle,\n\tcolor,\n\towner,\n\tindex,\n\ttaskHandler,\n\tcolumnId,\n\tcolumns,\n\tcolumnTitlesToIds\n}) => {\n\tconst [selectedColor, setSelectedColor] = useState(color)\n\tconst [selectedColumn, setSelectedColumn] = useState('')\n\tconst availableColors = [1, 2, 3, 4, 5, 6]\n\n\tconst columnRef = useRef(columnTitlesToIds.get(columnId))\n\n\t// prevent Drawer state update after saving task changes\n\tuseEffect(() => {\n\t\tlet contentIsShown = true\n\t\tif (contentIsShown === false) {\n\t\t\tonClose()\n\t\t}\n\t\treturn () => {\n\t\t\tcontentIsShown = false\n\t\t\tsetSelectedColumn(columnTitlesToIds.get(columnId))\n\t\t}\n\t})\n\n\tconst handleColumnChange = () => {\n\t\tsetSelectedColumn(columnRef.current.value)\n\t}\n\n\tconst colorButtons = availableColors.map(colorId => {\n\t\tif (selectedColor === colors.tasks[colorId].trim()) {\n\t\t\treturn (\n\t\t\t\t<Circle\n\t\t\t\t\tkey={colorId}\n\t\t\t\t\talign=\"center\"\n\t\t\t\t\tsize=\"24px\"\n\t\t\t\t\tborder=\"2px solid black\"\n\t\t\t\t\tm={0.5}\n\t\t\t\t\tbg={colors.tasks[colorId]}\n\t\t\t\t/>\n\t\t\t)\n\t\t} else\n\t\t\treturn (\n\t\t\t\t<Circle\n\t\t\t\t\tkey={colorId}\n\t\t\t\t\talign=\"center\"\n\t\t\t\t\tcursor=\"pointer\"\n\t\t\t\t\tsize=\"24px\"\n\t\t\t\t\tborder=\"2px solid white\"\n\t\t\t\t\tm={0.5}\n\t\t\t\t\tbg={colors.tasks[colorId]}\n\t\t\t\t\tonClick={() => setSelectedColor(colors.tasks[colorId])}\n\t\t\t\t/>\n\t\t\t)\n\t})\n\n\treturn (\n\t\t<Drawer\n\t\t\tisOpen={isOpen}\n\t\t\tonClose={onClose}\n\t\t\tplacement=\"right\"\n\t\t\tfinalFocusRef={btnRef}>\n\t\t\t<DrawerOverlay />\n\t\t\t<DrawerContent>\n\t\t\t\t<DrawerCloseButton />\n\t\t\t\t<DrawerHeader>{heading}</DrawerHeader>\n\t\t\t\t<Formik\n\t\t\t\t\tinitialValues={{\n\t\t\t\t\t\ttitle,\n\t\t\t\t\t\towner\n\t\t\t\t\t}}\n\t\t\t\t\tvalidate={values => {\n\t\t\t\t\t\tconst errors = {}\n\t\t\t\t\t\tif (!values.title) {\n\t\t\t\t\t\t\terrors.title = 'Required'\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn errors\n\t\t\t\t\t}}\n\t\t\t\t\tonSubmit={(values, { setSubmitting }) => {\n\t\t\t\t\t\ttaskHandler({\n\t\t\t\t\t\t\ttaskId: id,\n\t\t\t\t\t\t\ttitle: values.title,\n\t\t\t\t\t\t\towner: values.owner,\n\t\t\t\t\t\t\tcolor: selectedColor,\n\t\t\t\t\t\t\tsourceColumn: columnId,\n\t\t\t\t\t\t\tcolumnId: columnTitlesToIds.get(selectedColumn),\n\t\t\t\t\t\t\tdestinationColumn:\n\t\t\t\t\t\t\t\tcolumnTitlesToIds.get(selectedColumn),\n\t\t\t\t\t\t\tindex: index\n\t\t\t\t\t\t})\n\t\t\t\t\t\tsetSubmitting(false)\n\t\t\t\t\t\tonClose()\n\t\t\t\t\t}}>\n\t\t\t\t\t{({ errors, touched, isSubmitting }) => (\n\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t<DrawerBody>\n\t\t\t\t\t\t\t\t<Field name=\"title\">\n\t\t\t\t\t\t\t\t\t{({ field }) => (\n\t\t\t\t\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\t\t\t\t\tmb={3}\n\t\t\t\t\t\t\t\t\t\t\tisInvalid={\n\t\t\t\t\t\t\t\t\t\t\t\terrors.title && touched.title\n\t\t\t\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t\t\t\t<Text>Title:</Text>\n\t\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"title\"\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Task title\"\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t<FormErrorMessage>\n\t\t\t\t\t\t\t\t\t\t\t\t{errors.title}\n\t\t\t\t\t\t\t\t\t\t\t</FormErrorMessage>\n\t\t\t\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t\t<Field name=\"owner\">\n\t\t\t\t\t\t\t\t\t{({ field }) => (\n\t\t\t\t\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\t\t\t\t\tmb={3}\n\t\t\t\t\t\t\t\t\t\t\tisInvalid={\n\t\t\t\t\t\t\t\t\t\t\t\terrors.owner && touched.owner\n\t\t\t\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t\t\t\t<Text>Owner:</Text>\n\t\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"owner\"\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Task owner\"\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t<FormErrorMessage>\n\t\t\t\t\t\t\t\t\t\t\t\t{errors.owner}\n\t\t\t\t\t\t\t\t\t\t\t</FormErrorMessage>\n\t\t\t\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<Text>Category:</Text>\n\t\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\t\tref={columnRef}\n\t\t\t\t\t\t\t\t\t\tonChange={handleColumnChange}\n\t\t\t\t\t\t\t\t\t\tmb={3}>\n\t\t\t\t\t\t\t\t\t\t<option\n\t\t\t\t\t\t\t\t\t\t\tkey={columnId}\n\t\t\t\t\t\t\t\t\t\t\tvalue={columnTitlesToIds.get(\n\t\t\t\t\t\t\t\t\t\t\t\tcolumnId\n\t\t\t\t\t\t\t\t\t\t\t)}>\n\t\t\t\t\t\t\t\t\t\t\t{columnTitlesToIds.get(columnId)}\n\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t{columns.map(column => {\n\t\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\t\tcolumn ===\n\t\t\t\t\t\t\t\t\t\t\t\tcolumnTitlesToIds.get(columnId)\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\treturn ''\n\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t<option\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={column}\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={column}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{column}\n\t\t\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t\t\t<Text>Color:</Text>\n\t\t\t\t\t\t\t\t\t<Flex>{colorButtons}</Flex>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t</DrawerBody>\n\t\t\t\t\t\t\t<DrawerFooter>\n\t\t\t\t\t\t\t\t<Button variant=\"ghost\" onClick={onClose}>\n\t\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tcolorScheme=\"blue\"\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\tmr={3}\n\t\t\t\t\t\t\t\t\tisDisabled={errors.title || errors.owner}\n\t\t\t\t\t\t\t\t\tisLoading={isSubmitting}>\n\t\t\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</DrawerFooter>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t)}\n\t\t\t\t</Formik>\n\t\t\t</DrawerContent>\n\t\t</Drawer>\n\t)\n}\n\nexport default TaskView\n","import { useState, useRef } from 'react'\nimport { Draggable } from 'react-beautiful-dnd'\nimport {\n\tAvatar,\n\tCircle,\n\tContainer,\n\tFlex,\n\tIconButton,\n\tMenu,\n\tMenuButton,\n\tMenuItem,\n\tMenuList,\n\tPopover,\n\tPopoverContent,\n\tPopoverTrigger,\n\tPortal,\n\tText,\n\tTooltip,\n\tuseDisclosure\n} from '@chakra-ui/react'\nimport { colors } from '../theme'\nimport { SettingsIcon, DeleteIcon, EditIcon } from '@chakra-ui/icons'\nimport TaskView from '../views/TaskView'\n\nconst Task = ({\n\tid,\n\tindex,\n\ttitle,\n\tcolor,\n\towner,\n\tonColorChange,\n\tonDeleteTask,\n\tcolumnId,\n\tonSubmitEditedTask,\n\tcolumns,\n\tcolumnTitlesToIds\n}) => {\n\tconst [optionsAreOpen, setOptionsAreOpen] = useState(false)\n\tconst { isOpen, onOpen, onClose } = useDisclosure()\n\tconst btnRef = useRef()\n\tconst handleColorChange = (colorId, onClosePopover) => {\n\t\tonColorChange(id, colors.tasks[colorId])\n\t\tonClosePopover()\n\t}\n\n\tconst handleOptions = event => {\n\t\tif (event.type === 'mouseenter' || event.type === 'mouseover') {\n\t\t\tsetOptionsAreOpen(true)\n\t\t}\n\t\tif (event.type === 'mouseleave') {\n\t\t\tsetOptionsAreOpen(false)\n\t\t}\n\t}\n\n\tconst handleEditTask = () => {\n\t\tonOpen()\n\t}\n\n\tconst submitEditedTask = payload => {\n\t\tonSubmitEditedTask(payload)\n\t}\n\n\tconst handleDeleteTask = () => {\n\t\tonDeleteTask(columnId, id, index)\n\t}\n\n\tconst availableColors = [1, 2, 3, 4, 5, 6]\n\tconst colorButtons = onClose =>\n\t\tavailableColors.map(colorId => (\n\t\t\t<Circle\n\t\t\t\tkey={colorId}\n\t\t\t\talign=\"center\"\n\t\t\t\tsize=\"16px\"\n\t\t\t\tm={0.5}\n\t\t\t\tbg={colors.tasks[colorId]}\n\t\t\t\tonClick={() => handleColorChange(colorId, onClose)}\n\t\t\t/>\n\t\t))\n\n\treturn (\n\t\t<>\n\t\t\t<Draggable draggableId={id} index={index}>\n\t\t\t\t{provided => (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Container\n\t\t\t\t\t\t\tjustify=\"center\"\n\t\t\t\t\t\t\tonMouseEnter={handleOptions}\n\t\t\t\t\t\t\tonMouseOver={handleOptions}\n\t\t\t\t\t\t\tbg=\"white\"\n\t\t\t\t\t\t\tmb={1}\n\t\t\t\t\t\t\tpl={2}\n\t\t\t\t\t\t\tpt={1}\n\t\t\t\t\t\t\tpb={1}\n\t\t\t\t\t\t\tpr={0.5}\n\t\t\t\t\t\t\tborder=\"1px solid #CACFD6\"\n\t\t\t\t\t\t\tborderRadius={2}\n\t\t\t\t\t\t\tboxShadow={'2x1'}\n\t\t\t\t\t\t\theight=\"auto\"\n\t\t\t\t\t\t\t{...provided.draggableProps}\n\t\t\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t\t\t{...provided.dragHandleProps}>\n\t\t\t\t\t\t\t<Flex align=\"center\">\n\t\t\t\t\t\t\t\t<Popover>\n\t\t\t\t\t\t\t\t\t{({ onClosePopover }) => (\n\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t<PopoverTrigger>\n\t\t\t\t\t\t\t\t\t\t\t\t<Circle\n\t\t\t\t\t\t\t\t\t\t\t\t\talign=\"center\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"16px\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tbg={color}\n\t\t\t\t\t\t\t\t\t\t\t\t\tmr={1}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</PopoverTrigger>\n\t\t\t\t\t\t\t\t\t\t\t<Portal>\n\t\t\t\t\t\t\t\t\t\t\t\t<PopoverContent\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth=\"auto\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tp={1}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Flex>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{colorButtons(onClosePopover)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Flex>\n\t\t\t\t\t\t\t\t\t\t\t\t</PopoverContent>\n\t\t\t\t\t\t\t\t\t\t\t</Portal>\n\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Popover>\n\t\t\t\t\t\t\t\t{/* TODO: only show tooltip if text is truncated */}\n\t\t\t\t\t\t\t\t<Flex\n\t\t\t\t\t\t\t\t\tjustify=\"space-between\"\n\t\t\t\t\t\t\t\t\talign=\"center\"\n\t\t\t\t\t\t\t\t\twidth=\"90%\">\n\t\t\t\t\t\t\t\t\t<Tooltip label={title}>\n\t\t\t\t\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\t\t\t\t\tfontSize=\"sm\"\n\t\t\t\t\t\t\t\t\t\t\ttextAlign=\"center\"\n\t\t\t\t\t\t\t\t\t\t\tas=\"b\"\n\t\t\t\t\t\t\t\t\t\t\tisTruncated>\n\t\t\t\t\t\t\t\t\t\t\t{title}\n\t\t\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t\t<TaskView\n\t\t\t\t\t\t\t\t\t\tbtnRef={btnRef}\n\t\t\t\t\t\t\t\t\t\tisOpen={isOpen}\n\t\t\t\t\t\t\t\t\t\tonClose={onClose}\n\t\t\t\t\t\t\t\t\t\theading=\"Edit task\"\n\t\t\t\t\t\t\t\t\t\tid={id}\n\t\t\t\t\t\t\t\t\t\ttitle={title}\n\t\t\t\t\t\t\t\t\t\tcolor={color}\n\t\t\t\t\t\t\t\t\t\towner={owner}\n\t\t\t\t\t\t\t\t\t\ttaskHandler={submitEditedTask}\n\t\t\t\t\t\t\t\t\t\tcolumns={columns}\n\t\t\t\t\t\t\t\t\t\tcolumnTitlesToIds={columnTitlesToIds}\n\t\t\t\t\t\t\t\t\t\tcolumnId={columnId}\n\t\t\t\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t{optionsAreOpen ? (\n\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t<Menu>\n\t\t\t\t\t\t\t\t\t\t\t\t<MenuButton\n\t\t\t\t\t\t\t\t\t\t\t\t\tas={IconButton}\n\t\t\t\t\t\t\t\t\t\t\t\t\taria-label=\"display task settings\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"unstyled\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"xs\"\n\t\t\t\t\t\t\t\t\t\t\t\t\ticon={<SettingsIcon />}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t<MenuList>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ticon={<EditIcon />}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcommand=\"E\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleEditTask}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tref={btnRef}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tEdit\n\t\t\t\t\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ticon={<DeleteIcon />}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcommand=\"D\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleDeleteTask\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t\t\t\t\t</MenuList>\n\t\t\t\t\t\t\t\t\t\t\t</Menu>\n\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"unstyled\"\n\t\t\t\t\t\t\t\t\t\t\tsize=\"xs\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Flex>\n\t\t\t\t\t\t\t</Flex>\n\t\t\t\t\t\t\t{owner && (\n\t\t\t\t\t\t\t\t<Flex align=\"center\">\n\t\t\t\t\t\t\t\t\t<Avatar size=\"2xs\" mr={1}></Avatar>\n\t\t\t\t\t\t\t\t\t<Text fontSize=\"sm\">{owner}</Text>\n\t\t\t\t\t\t\t\t</Flex>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Container>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</Draggable>\n\t\t</>\n\t)\n}\n\nexport default Task\n","import { Flex } from \"@chakra-ui/react\"\nimport Task from \"./Task\"\n\nconst TaskOverview = ({ tasks, onColorChange, onDeleteTask, onSubmitEditedTask, columnId, columns, columnTitlesToIds }) => {\n\n    return (<Flex direction=\"column\">\n        {tasks.map((task, index) => <Task key={task.id} id={task.id} title={task.title} owner={task.owner} color={task.color} index={index} onColorChange={onColorChange} columnTitlesToIds={columnTitlesToIds} onDeleteTask={onDeleteTask} columnId={columnId} onSubmitEditedTask={onSubmitEditedTask} columns={columns}></Task>)}\n        </Flex>)\n}\n\nexport default TaskOverview","import { useState, useRef, useEffect } from 'react'\nimport { Draggable, Droppable } from 'react-beautiful-dnd'\nimport {\n\tBox,\n\tContainer,\n\tFlex,\n\tFormControl,\n\tHeading,\n\tIconButton,\n\tInput,\n\tText\n} from '@chakra-ui/react'\nimport { Formik, Form, Field } from 'formik'\nimport TaskAddNew from '../components/TaskAddNew'\nimport TaskOverview from './TaskOverview'\nimport { DeleteIcon, EditIcon } from '@chakra-ui/icons'\n\nconst Column = ({\n\twidth,\n\tid,\n\ttitle,\n\ttasks,\n\tindex,\n\tonColumnSubmit,\n\tonColorChange,\n\tonDeleteColumn,\n\tonAddTask,\n\tactiveList,\n\tonDeleteTask,\n\tonSubmitEditedTask,\n\tcolumns,\n\tcolumnTitlesToIds\n}) => {\n\tconst [optionsAreOpen, setOptionsAreOpen] = useState(false)\n\tconst [isEditingTitle, setEditingTitle] = useState(false)\n\tconst [isOpen, setIsOpen] = useState(false)\n\tconst inputRef = useRef()\n\n\tuseEffect(() => {\n\t\tif (isEditingTitle) {\n\t\t\tinputRef.current.focus()\n\t\t}\n\t}, [isEditingTitle])\n\n\tconst toggleOptions = event => {\n\t\tif (event.type === 'mouseover' || event.type === 'mouseenter') {\n\t\t\tsetOptionsAreOpen(true)\n\t\t}\n\t\tif (event.type === 'mouseleave') {\n\t\t\tsetOptionsAreOpen(false)\n\t\t}\n\t}\n\n\tconst handleTitleSelect = () => {\n\t\tsetEditingTitle(prevState => !prevState)\n\t}\n\n\tconst handleDelete = () => {\n\t\tonDeleteColumn({\n\t\t\ttype: 'deleteColumn',\n\t\t\tpayload: { columnId: id, index }\n\t\t})\n\t}\n\n\tconst toggleAddTask = () => {\n\t\tsetIsOpen(prevState => !prevState)\n\t}\n\n\tconst editTitleField = (\n\t\t<Formik\n\t\t\tinitialValues={{ columnName: title }}\n\t\t\tvalidate={values => {\n\t\t\t\tconst errors = {}\n\t\t\t\tif (!values.columnName) {\n\t\t\t\t\terrors.columnName = 'Required'\n\t\t\t\t}\n\t\t\t\treturn errors\n\t\t\t}}\n\t\t\tonSubmit={values => {\n\t\t\t\tonColumnSubmit(id, values.columnName)\n\t\t\t\thandleTitleSelect()\n\t\t\t}}>\n\t\t\t{({ handleSubmit, errors }) => (\n\t\t\t\t<Form>\n\t\t\t\t\t<Field name=\"columnName\">\n\t\t\t\t\t\t{({ field }) => (\n\t\t\t\t\t\t\t<FormControl isInvalid={errors.columnName}>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\tref={inputRef}\n\t\t\t\t\t\t\t\t\tname=\"columnName\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"Column name\"\n\t\t\t\t\t\t\t\t\tonBlur={handleSubmit}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Field>\n\t\t\t\t</Form>\n\t\t\t)}\n\t\t</Formik>\n\t)\n\n\treturn (\n\t\t<Box>\n\t\t\t<Draggable draggableId={id} index={index}>\n\t\t\t\t{provided => (\n\t\t\t\t\t<Container\n\t\t\t\t\t\twidth={width}\n\t\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t\t{...provided.draggableProps}\n\t\t\t\t\t\t{...provided.dragHandleProps}\n\t\t\t\t\t\tmt={2}\n\t\t\t\t\t\tp={3}>\n\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\talign=\"center\"\n\t\t\t\t\t\t\tbg=\"#FFFFFF\"\n\t\t\t\t\t\t\tmb={3}\n\t\t\t\t\t\t\tp={0}\n\t\t\t\t\t\t\tborder=\"1px solid #CACFD6\"\n\t\t\t\t\t\t\tborderRadius={2}>\n\t\t\t\t\t\t\t{isEditingTitle ? (\n\t\t\t\t\t\t\t\teditTitleField\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<Flex\n\t\t\t\t\t\t\t\t\tonMouseEnter={toggleOptions}\n\t\t\t\t\t\t\t\t\tonMouseOver={toggleOptions}\n\t\t\t\t\t\t\t\t\tonMouseLeave={toggleOptions}\n\t\t\t\t\t\t\t\t\talign=\"center\"\n\t\t\t\t\t\t\t\t\tjustify=\"space-between\">\n\t\t\t\t\t\t\t\t\t<Heading\n\t\t\t\t\t\t\t\t\t\tml={3}\n\t\t\t\t\t\t\t\t\t\tmt={1}\n\t\t\t\t\t\t\t\t\t\tmb={1}\n\t\t\t\t\t\t\t\t\t\talign=\"center\"\n\t\t\t\t\t\t\t\t\t\tlineHeight=\"unset\"\n\t\t\t\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\t\t\t\tisTruncated>\n\t\t\t\t\t\t\t\t\t\t{title}\n\t\t\t\t\t\t\t\t\t</Heading>\n\t\t\t\t\t\t\t\t\t{optionsAreOpen ? (\n\t\t\t\t\t\t\t\t\t\t<Flex>\n\t\t\t\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleTitleSelect}\n\t\t\t\t\t\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"unstyled\"\n\t\t\t\t\t\t\t\t\t\t\t\ticon={<EditIcon />}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleDelete}\n\t\t\t\t\t\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"unstyled\"\n\t\t\t\t\t\t\t\t\t\t\t\ticon={<DeleteIcon />}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Flex>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<Flex>\n\t\t\t\t\t\t\t\t\t\t\t<IconButton size=\"sm\" variant=\"unstyled\"/>\n\t\t\t\t\t\t\t\t\t\t</Flex>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Flex>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<Box mb={3} borderBottom=\"2px solid #CACFD6\" />\n\t\t\t\t\t\t<Droppable droppableId={id} type=\"task\" index={index}>\n\t\t\t\t\t\t\t{provided => (\n\t\t\t\t\t\t\t\t<div ref={provided.innerRef}>\n\t\t\t\t\t\t\t\t\t<TaskOverview\n\t\t\t\t\t\t\t\t\t\t{...provided.droppableProps}\n\t\t\t\t\t\t\t\t\t\ttasks={tasks}\n\t\t\t\t\t\t\t\t\t\tonColorChange={onColorChange}\n\t\t\t\t\t\t\t\t\t\tactiveList={activeList}\n\t\t\t\t\t\t\t\t\t\tcolumnId={id}\n\t\t\t\t\t\t\t\t\t\tonDeleteTask={onDeleteTask}\n\t\t\t\t\t\t\t\t\t\tonSubmitEditedTask={onSubmitEditedTask}\n\t\t\t\t\t\t\t\t\t\tcolumns={columns}\n\t\t\t\t\t\t\t\t\t\tcolumnTitlesToIds={columnTitlesToIds}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t{provided.placeholder}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Droppable>\n\t\t\t\t\t\t{provided.placeholder}\n\t\t\t\t\t\t{!isOpen ? (\n\t\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\t\tjustify=\"center\"\n\t\t\t\t\t\t\t\tcolor=\"#666666\"\n\t\t\t\t\t\t\t\taria-label=\"Add task button\"\n\t\t\t\t\t\t\t\tonClick={toggleAddTask}>\n\t\t\t\t\t\t\t\t+ Add Task\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<TaskAddNew\n\t\t\t\t\t\t\t\tonAddTask={onAddTask}\n\t\t\t\t\t\t\t\thideTaskInput={toggleAddTask}\n\t\t\t\t\t\t\t\tisOpen={isOpen}\n\t\t\t\t\t\t\t\tcolumnId={id}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Container>\n\t\t\t\t)}\n\t\t\t</Draggable>\n\t\t</Box>\n\t)\n}\n\nexport default Column\n","import Column from '../components/Column'\nimport { Box, IconButton } from '@chakra-ui/react'\nimport { AddIcon } from '@chakra-ui/icons'\nimport { Droppable } from 'react-beautiful-dnd'\n\nconst BoardView = ({\n\tdata,\n\tonOpen,\n\tonDrop,\n\tonColumnSubmit,\n\tonColorChange,\n\tonAddTask,\n\tonDeleteColumn,\n\tonDeleteTask,\n\tonSubmitEditedTask,\n\tcolumnTitlesToIds\n}) => {\n\treturn (\n\t\t<Droppable droppableId=\"board\" type=\"column\" direction=\"horizontal\">\n\t\t\t{provided => (\n\t\t\t\t<>\n\t\t\t\t\t{data && (\n\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\tdisplay=\"flex\"\n\t\t\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t\t\t{...provided.droppableProps}>\n\t\t\t\t\t\t\t{data.columnOrder.map((columnId, index) => (\n\t\t\t\t\t\t\t\t<Column\n\t\t\t\t\t\t\t\t\twidth=\"250px\"\n\t\t\t\t\t\t\t\t\tkey={columnId}\n\t\t\t\t\t\t\t\t\tid={columnId}\n\t\t\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\t\t\ttitle={data.columns[columnId].title}\n\t\t\t\t\t\t\t\t\ttaskIds={data.columns[columnId].taskIds}\n\t\t\t\t\t\t\t\t\ttasks={data.columns[columnId].taskIds.map(\n\t\t\t\t\t\t\t\t\t\ttaskId => data.tasks[taskId]\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\tonDrop={onDrop}\n\t\t\t\t\t\t\t\t\tonColumnSubmit={onColumnSubmit}\n\t\t\t\t\t\t\t\t\tonColorChange={onColorChange}\n\t\t\t\t\t\t\t\t\tonAddTask={onAddTask}\n\t\t\t\t\t\t\t\t\tonDeleteColumn={onDeleteColumn}\n\t\t\t\t\t\t\t\t\tonDeleteTask={onDeleteTask}\n\t\t\t\t\t\t\t\t\tonSubmitEditedTask={onSubmitEditedTask}\n\t\t\t\t\t\t\t\t\tcolumns={Object.values(data.columns).map(column => column.title)}\n\t\t\t\t\t\t\t\t\tcolumnTitlesToIds={columnTitlesToIds}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t{provided.placeholder}\n\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\tmt={6}\n\t\t\t\t\t\t\t\tsize=\"xs\"\n\t\t\t\t\t\t\t\tbgColor=\"#424874\"\n\t\t\t\t\t\t\t\tcolor=\"#FFFFFF\"\n\t\t\t\t\t\t\t\t_hover={{ bgColor: '#292D48'}}\n\t\t\t\t\t\t\t\tisRound={true}\n\t\t\t\t\t\t\t\taria-label=\"Add column button\"\n\t\t\t\t\t\t\t\ticon={<AddIcon />}\n\t\t\t\t\t\t\t\tonClick={onOpen}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t)}\n\t\t\t\t</>\n\t\t\t)}\n\t\t</Droppable>\n\t)\n}\n\nexport default BoardView\n","import { useState, useRef } from 'react'\nimport { Circle, IconButton, Portal, Tr, Td, useDisclosure } from '@chakra-ui/react'\nimport { DeleteIcon, EditIcon } from '@chakra-ui/icons'\nimport TaskView from '../views/TaskView'\n\nconst TableRow = ({\n\tcolumnTitle,\n\tcolumnId,\n\ttaskId,\n\ttaskTitle,\n\ttaskOwner,\n\ttaskColor,\n\tindex,\n\ttaskHandler,\n\tportalRef,\n\tonDeleteTask,\n\tcolumnTitlesToIds,\n\tcolumns\n}) => {\n\tconst { isOpen, onOpen, onClose } = useDisclosure()\n\tconst [tableViewIsOpen, setTableViewIsOpen] = useState(false)\n\tconst btnRef = useRef()\n\n\tconst toggleTaskView = () => {\n\t\tsetTableViewIsOpen(true)\n\t\tonOpen()\n\t}\n\n\tconst handleDeleteTask = () => {\n\t\tonDeleteTask(columnId, taskId, index)\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{tableViewIsOpen && <Portal containerRef={portalRef}>\n\t\t\t\t<TaskView\n\t\t\t\t\tbtnRef={btnRef}\n\t\t\t\t\tisOpen={isOpen}\n\t\t\t\t\tonClose={onClose}\n\t\t\t\t\theading=\"Edit task\"\n\t\t\t\t\tid={taskId}\n\t\t\t\t\ttitle={taskTitle}\n\t\t\t\t\tcolor={taskColor}\n\t\t\t\t\towner={taskOwner}\n\t\t\t\t\ttaskHandler={taskHandler}\n\t\t\t\t\tcolumns={columns}\n\t\t\t\t\tcolumnTitlesToIds={columnTitlesToIds}\n\t\t\t\t\tcolumnId={columnId}\n\t\t\t\t\tindex={index}\n\t\t\t\t/>\n\t\t\t</Portal>}\n\t\t\t<Tr\n\t\t\t\tkey={taskId}>\n\t\t\t\t<Td>{columnTitle}</Td>\n\t\t\t\t<Td>{taskTitle}</Td>\n\t\t\t\t<Td>{taskOwner}</Td>\n\t\t\t\t<Td><Circle\n\t\t\t\t\tsize=\"20px\"\n\t\t\t\t\talign=\"center\"\n\t\t\t\t\tjustify=\"center\"\n\t\t\t\t\tborder=\"1px solid black\"\n\t\t\t\t\tm={0.5}\n\t\t\t\t\tbg={taskColor}/></Td>\n\t\t\t\t\t<Td>\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tsize=\"xs\"\n\t\t\t\t\t\t\tvariant=\"unstyled\"\n\t\t\t\t\t\t\ticon={<EditIcon />}\n\t\t\t\t\t\t\tonClick={toggleTaskView}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tsize=\"xs\"\n\t\t\t\t\t\t\tvariant=\"unstyled\"\n\t\t\t\t\t\t\ticon={<DeleteIcon />}\n\t\t\t\t\t\t\tonClick={handleDeleteTask}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Td>\n\t\t\t</Tr>\n\t\t</>\n\t)\n}\n\nexport default TableRow\n","import { useRef } from 'react'\nimport {\n\tBox,\n\tFlex,\n\tTable,\n\tThead,\n\tTr,\n\tTh,\n\tTbody,\n\tText,\n\tuseDisclosure\n} from '@chakra-ui/react'\nimport TaskView from './TaskView'\nimport TableRow from '../components/TableRow'\n\nconst TableView = ({\n\tdata,\n\tonAddNewDetailedTask,\n\tcolumnTitlesToIds,\n\tonSubmitEditedTask,\n\tonDeleteTask\n}) => {\n\tconst { isOpen, onOpen, onClose } = useDisclosure()\n\tconst btnRef = useRef()\n\tconst portalRef = useRef()\n\n\tconst submitNewDetailedTask = payload => {\n\t\tonAddNewDetailedTask(payload)\n\t}\n\n\tconst submitEditedTask = payload => {\n\t\tonSubmitEditedTask(payload)\n\t}\n\n\tconst toggleTaskView = () => {\n\t\tonOpen()\n\t}\n\n\treturn (\n\t\t<Flex ref={portalRef} direction=\"column\">\n\t\t\t<Box\n\t\t\t\talign=\"center\"\n\t\t\t\tbg=\"#FFFFFF\"\n\t\t\t\tmt={5}\n\t\t\t\tml={5}\n\t\t\t\tp={0}\n\t\t\t\tborder=\"1px solid #CACFD6\"\n\t\t\t\tborderRadius={2}>\n\t\t\t\t<Table variant=\"simple\" size=\"sm\">\n\t\t\t\t\t<Thead bgColor=\"#5B8266\">\n\t\t\t\t\t\t<Tr>\n\t\t\t\t\t\t\t<Th color=\"#FFFFFF\">Category</Th>\n\t\t\t\t\t\t\t<Th color=\"#FFFFFF\">Task</Th>\n\t\t\t\t\t\t\t<Th color=\"#FFFFFF\">Owner</Th>\n\t\t\t\t\t\t\t<Th color=\"#FFFFFF\">Color</Th>\n\t\t\t\t\t\t\t<Th color=\"#FFFFFF\">Options</Th>\n\t\t\t\t\t\t</Tr>\n\t\t\t\t\t</Thead>\n\t\t\t\t\t<Tbody>\n\t\t\t\t\t\t{Object.values(data.columns).map(column =>\n\t\t\t\t\t\t\tcolumn.taskIds.map((task, index) => (\n\t\t\t\t\t\t\t\t<TableRow\n\t\t\t\t\t\t\t\t\tkey={data.tasks[task].id}\n\t\t\t\t\t\t\t\t\tcolumnTitle={column.title}\n\t\t\t\t\t\t\t\t\tcolumnId={column.id}\n\t\t\t\t\t\t\t\t\ttaskId={data.tasks[task].id}\n\t\t\t\t\t\t\t\t\ttaskTitle={data.tasks[task].title}\n\t\t\t\t\t\t\t\t\ttaskOwner={data.tasks[task].owner}\n\t\t\t\t\t\t\t\t\ttaskColor={data.tasks[task].color}\n\t\t\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\t\t\tportalRef={portalRef}\n\t\t\t\t\t\t\t\t\ttaskHandler={submitEditedTask}\n\t\t\t\t\t\t\t\t\tonDeleteTask={onDeleteTask}\n\t\t\t\t\t\t\t\t\tcolumns={Object.values(data.columns).map(\n\t\t\t\t\t\t\t\t\t\tcolumn => column.title\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\tcolumnTitlesToIds={columnTitlesToIds}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Tbody>\n\t\t\t\t</Table>\n\t\t\t\t{isOpen && (\n\t\t\t\t\t<TaskView\n\t\t\t\t\t\tbtnRef={btnRef}\n\t\t\t\t\t\tisOpen={isOpen}\n\t\t\t\t\t\tonClose={onClose}\n\t\t\t\t\t\theading=\"Create new task\"\n\t\t\t\t\t\tid={''}\n\t\t\t\t\t\ttitle={''}\n\t\t\t\t\t\tcolor=\"#EAEAEA\"\n\t\t\t\t\t\towner={''}\n\t\t\t\t\t\ttaskHandler={submitNewDetailedTask}\n\t\t\t\t\t\tcolumns={Object.values(data.columns).map(\n\t\t\t\t\t\t\tcolumn => column.title\n\t\t\t\t\t\t)}\n\t\t\t\t\t\tcolumnId={Object.values(data.columns)[0].id}\n\t\t\t\t\t\tcolumnTitlesToIds={columnTitlesToIds}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t<Text fontSize=\"sm\" ml={3} align=\"left\" color=\"#666666\" onClick={toggleTaskView}>\n\t\t\t\t\t+ Add Task\n\t\t\t\t</Text>\n\t\t\t</Box>\n\t\t</Flex>\n\t)\n}\n\nexport default TableView\n","import { useState, useEffect } from 'react'\nimport { Box, Flex, IconButton, Icon, useDisclosure } from '@chakra-ui/react'\nimport { HamburgerIcon } from '@chakra-ui/icons'\nimport { BsKanban, BsTable } from 'react-icons/bs'\nimport { DragDropContext } from 'react-beautiful-dnd'\nimport ColumnAddNew from './components/ColumnAddNew'\nimport BoardView from './views/BoardView'\nimport TableView from './views/TableView'\n\nconst Body = ({\n\ttaskListData,\n\tactiveList,\n\tdispatch,\n\ttoggleMenu,\n\tisSmallerThan768\n}) => {\n\tconst [data, setData] = useState(taskListData)\n\tconst { isOpen, onOpen, onClose } = useDisclosure()\n\tconst [view, setView] = useState('board')\n\n\tuseEffect(() => {\n\t\tsetData(taskListData)\n\t\tconst createTwoWayMap = (taskListData, activeList) => {\n\t\t\treturn new Map(\n\t\t\t\tObject.values(taskListData.taskLists[activeList].columns)\n\t\t\t\t\t.map(column => [column.title, column.id])\n\t\t\t\t\t.concat(\n\t\t\t\t\t\tObject.values(\n\t\t\t\t\t\t\ttaskListData.taskLists[activeList].columns\n\t\t\t\t\t\t).map(column => [column.id, column.title])\n\t\t\t\t\t)\n\t\t\t)\n\t\t}\n\t\tsetColumnTitlesToIds(createTwoWayMap(taskListData, taskListData.activeList))\n\t}, [taskListData])\n\n\n\t// creates two-way map between column titles (e.g. 'backlog') and ids\n\tconst [columnTitlesToIds, setColumnTitlesToIds] = useState(\n\t\tnew Map(\n\t\t\tObject.values(taskListData.taskLists[activeList].columns)\n\t\t\t\t.map(column => [column.title, column.id])\n\t\t\t\t.concat(\n\t\t\t\t\tObject.values(\n\t\t\t\t\t\ttaskListData.taskLists[activeList].columns\n\t\t\t\t\t).map(column => [column.id, column.title])\n\t\t\t\t)\n\t\t)\n\t)\n\n\tconst handleOnDragEnd = result => {\n\t\tif (result.type === 'column') {\n\t\t\tdispatch({\n\t\t\t\ttype: 'moveColumn',\n\t\t\t\tpayload: {\n\t\t\t\t\tsourceIndex: result.source.index,\n\t\t\t\t\tdestinationIndex: result.destination.index,\n\t\t\t\t\tdraggableId: result.draggableId\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tif (result.type === 'task') {\n\t\t\tif (!result.destination) return\n\t\t\tdispatch({\n\t\t\t\ttype: 'moveTask',\n\t\t\t\tpayload: {\n\t\t\t\t\tsourceColumn: result.source.droppableId,\n\t\t\t\t\tsourceIndex: result.source.index,\n\t\t\t\t\tdestinationColumn: result.destination.droppableId,\n\t\t\t\t\tdestinationIndex: result.destination.index,\n\t\t\t\t\tdraggableId: result.draggableId\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tconst handleNewTask = (taskTitle, columnId) => {\n\t\tdispatch({\n\t\t\ttype: 'addTask',\n\t\t\tpayload: {\n\t\t\t\tactiveList,\n\t\t\t\ttaskTitle,\n\t\t\t\tcolumnId\n\t\t\t}\n\t\t})\n\t}\n\n\tconst handleDeleteTask = (columnId, taskId, index) => {\n\t\tdispatch({ type: 'deleteTask', payload: { columnId, taskId, index } })\n\t}\n\n\tconst handleColumnTitleChange = (columnId, columnName) => {\n\t\tdispatch({ type: 'renameColumn', payload: { columnId, columnName } })\n\t}\n\n\tconst handleDeleteColumn = typeAndPayload => {\n\t\tdispatch(typeAndPayload)\n\t}\n\n\tconst toggleView = () => {\n\t\tsetView(prevState => (prevState === 'board' ? 'table' : 'board'))\n\t}\n\n\tconst handleColorChange = (taskId, color) => {\n\t\t// activeList added here, not prop drilled to Task component\n\t\tdispatch({\n\t\t\ttype: 'changeTaskColor',\n\t\t\tpayload: { activeList, taskId, color }\n\t\t})\n\t}\n\n\tconst handleSubmitEditedTask = ({\n\t\ttaskId,\n\t\ttitle,\n\t\tcolor,\n\t\towner,\n\t\tcolumnId,\n\t\tsourceColumn,\n\t\tdestinationColumn,\n\t\tindex\n\t}) => {\n\t\tdispatch({\n\t\t\ttype: 'editTask',\n\t\t\tpayload: {\n\t\t\t\tcolumnId,\n\t\t\t\ttaskId,\n\t\t\t\ttitle,\n\t\t\t\tcolor,\n\t\t\t\towner,\n\t\t\t\tsourceColumn,\n\t\t\t\tdestinationColumn,\n\t\t\t\tindex\n\t\t\t}\n\t\t})\n\t}\n\n\tconst handleNewDetailedTask = ({ title, color, owner, columnId }) => {\n\t\tdispatch({\n\t\t\ttype: 'addDetailedTask',\n\t\t\tpayload: { columnId, title, color, owner }\n\t\t})\n\t}\n\t\n\treturn (\n\t\t<Box bg=\"#F4F4F4\" minWidth=\"fit-content\" width=\"100%\">\n\t\t\t<DragDropContext onDragEnd={handleOnDragEnd}>\n\t\t\t\t<ColumnAddNew\n\t\t\t\t\tisOpen={isOpen}\n\t\t\t\t\tonOpen={onOpen}\n\t\t\t\t\tonClose={onClose}\n\t\t\t\t\tactiveList={taskListData.activeList}\n\t\t\t\t\tdispatch={dispatch}\n\t\t\t\t/>\n\t\t\t\t<Flex direction=\"column\">\n\t\t\t\t\t<Flex mt={5} ml={5}>\n\t\t\t\t\t\t{isSmallerThan768 && (\n\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\tonClick={toggleMenu}\n\t\t\t\t\t\t\t\tisRound={true}\n\t\t\t\t\t\t\t\tsize=\"xs\"\n\t\t\t\t\t\t\t\tbgColor=\"#424874\"\n\t\t\t\t\t\t\t\tcolor=\"white\"\n\t\t\t\t\t\t\t\t_hover={{ bgColor: '#292D48' }}\n\t\t\t\t\t\t\t\ticon={<HamburgerIcon />}\n\t\t\t\t\t\t\t\tmr={5}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tisDisabled={view === 'board'}\n\t\t\t\t\t\t\tisRound={true}\n\t\t\t\t\t\t\tcolorScheme=\"blackAlpha\"\n\t\t\t\t\t\t\tonClick={toggleView}\n\t\t\t\t\t\t\tsize=\"xs\"\n\t\t\t\t\t\t\tmr={1}\n\t\t\t\t\t\t\ticon={<Icon as={BsKanban} />}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tisDisabled={view === 'table'}\n\t\t\t\t\t\t\tisRound={true}\n\t\t\t\t\t\t\tcolorScheme=\"blackAlpha\"\n\t\t\t\t\t\t\tsize=\"xs\"\n\t\t\t\t\t\t\tonClick={toggleView}\n\t\t\t\t\t\t\ticon={<Icon as={BsTable} />}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Flex>\n\t\t\t\t\t<Flex>\n\t\t\t\t\t\t{view === 'board' ? (\n\t\t\t\t\t\t\t<BoardView\n\t\t\t\t\t\t\t\tdata={data.taskLists[activeList]}\n\t\t\t\t\t\t\t\tonOpen={onOpen}\n\t\t\t\t\t\t\t\tdispatch={dispatch}\n\t\t\t\t\t\t\t\tonDrop={handleOnDragEnd}\n\t\t\t\t\t\t\t\tonColumnSubmit={handleColumnTitleChange}\n\t\t\t\t\t\t\t\tonAddTask={handleNewTask}\n\t\t\t\t\t\t\t\tonColorChange={handleColorChange}\n\t\t\t\t\t\t\t\tonDeleteColumn={handleDeleteColumn}\n\t\t\t\t\t\t\t\tonDeleteTask={handleDeleteTask}\n\t\t\t\t\t\t\t\tonSubmitEditedTask={handleSubmitEditedTask}\n\t\t\t\t\t\t\t\tcolumnTitlesToIds={columnTitlesToIds}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<TableView\n\t\t\t\t\t\t\t\tdata={data.taskLists[activeList]}\n\t\t\t\t\t\t\t\tcolumnTitlesToIds={columnTitlesToIds}\n\t\t\t\t\t\t\t\tonAddNewDetailedTask={handleNewDetailedTask}\n\t\t\t\t\t\t\t\tonSubmitEditedTask={handleSubmitEditedTask}\n\t\t\t\t\t\t\t\tonDeleteTask={handleDeleteTask}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Flex>\n\t\t\t\t</Flex>\n\t\t\t</DragDropContext>\n\t\t</Box>\n\t)\n}\n\nexport default Body\n","import { useState, useRef, useEffect } from 'react'\nimport { Flex, Input } from '@chakra-ui/react'\n\nconst ListAddNew = ({ hideInput, isOpen, onSubmit }) => {\n\tconst [listName, setListName] = useState('')\n\tconst inputRef = useRef()\n\n\tuseEffect(() => {\n\t\tif (isOpen) {\n\t\t\tinputRef.current.focus()\n\t\t}\n\t}, [isOpen])\n\n\tconst handleChange = event => {\n\t\tsetListName(event.target.value)\n\t}\n\n\tconst handleSubmit = event => {\n\t\tevent.preventDefault()\n\t\tif (listName.trim().length > 0) {\n\t\t\tonSubmit({ type: 'addList', payload: listName })\n\t\t\tsetListName('')\n\t\t\thideInput()\n\t\t} else {\n\t\t\thideInput()\n\t\t}\n\t}\n\n\tconst handleBlur = () => {\n\t\thideInput()\n\t}\n\n\treturn (\n\t\t<form onSubmit={handleSubmit}>\n\t\t\t<Flex>\n\t\t\t\t<Input\n\t\t\t\t\tref={inputRef}\n\t\t\t\t\tvalue={listName}\n\t\t\t\t\tplaceholder=\"List name\"\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\tcolorScheme=\"whiteAlpha\"\n\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\tml={5}\n\t\t\t\t\tmr={5}\n\t\t\t\t\tmt={3}\n\t\t\t\t/>\n\t\t\t</Flex>\n\t\t</form>\n\t)\n}\n\nexport default ListAddNew\n","import { useState, useRef, useEffect } from 'react'\nimport { Draggable } from 'react-beautiful-dnd'\nimport { Formik, Form, Field } from 'formik'\nimport {\n\tBox,\n\tFormControl,\n\tFlex,\n\tIconButton,\n\tInput,\n\tText\n} from '@chakra-ui/react'\nimport { DeleteIcon, EditIcon } from '@chakra-ui/icons'\n\nconst TaskListItem = ({\n\tlistName,\n\tindex,\n\tactiveList,\n\tonListSwitch,\n\tonListSubmit,\n\tonDelete\n}) => {\n\tconst [optionsAreOpen, setOptionsAreOpen] = useState(false)\n\tconst [isEditing, setIsEditing] = useState(false)\n\tconst inputRef = useRef()\n\n\tuseEffect(() => {\n\t\tif (isEditing) {\n\t\t\tinputRef.current.focus()\n\t\t}\n\t}, [isEditing])\n\n\tconst toggleOptions = event => {\n\t\tif (event.type === 'mouseover' || event.type === 'mouseenter') {\n\t\t\tsetOptionsAreOpen(true)\n\t\t}\n\t\tif (event.type === 'mouseleave') {\n\t\t\tsetOptionsAreOpen(false)\n\t\t}\n\t}\n\n\tconst handleDelete = () => {\n\t\tonDelete({ type: 'deleteList', payload: listName })\n\t}\n\n\tconst handleEdit = () => {\n\t\tsetIsEditing(true)\n\t}\n\n\tconst editListField = (\n\t\t<Formik\n\t\t\tinitialValues={{ listName }}\n\t\t\tvalidate={values => {\n\t\t\t\tconst errors = {}\n\t\t\t\tif (!values.listName) {\n\t\t\t\t\terrors.listName = 'Required'\n\t\t\t\t}\n\t\t\t\treturn errors\n\t\t\t}}\n\t\t\tonSubmit={values => {\n\t\t\t\tonListSubmit({\n\t\t\t\t\ttype: 'renameList',\n\t\t\t\t\tpayload: { listName, newName: values.listName }\n\t\t\t\t})\n\t\t\t}}>\n\t\t\t{({ handleSubmit, errors }) => (\n\t\t\t\t<Form>\n\t\t\t\t\t<Field name=\"listName\">\n\t\t\t\t\t\t{({ field }) => (\n\t\t\t\t\t\t\t<FormControl isInvalid={errors.listName}>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\tref={inputRef}\n\t\t\t\t\t\t\t\t\tname=\"listName\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"List name\"\n\t\t\t\t\t\t\t\t\tonBlur={handleSubmit}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Field>\n\t\t\t\t</Form>\n\t\t\t)}\n\t\t</Formik>\n\t)\n\n\treturn (\n\t\t<Draggable draggableId={listName} index={index}>\n\t\t\t{provided => (\n\t\t\t\t<Flex\n\t\t\t\t\theight=\"50px\"\n\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\t{...provided.draggableProps}\n\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t{...provided.dragHandleProps}\n\t\t\t\t\tonMouseEnter={toggleOptions}\n\t\t\t\t\tonMouseOver={toggleOptions}\n\t\t\t\t\tonMouseLeave={toggleOptions}>\n\t\t\t\t\t{isEditing ? (\n\t\t\t\t\t\teditListField\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Flex\n\t\t\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\t\t\tjustify=\"space-between\"\n\t\t\t\t\t\t\tflexGrow={1}\n\t\t\t\t\t\t\tkey={listName}\n\t\t\t\t\t\t\tpt={0}\n\t\t\t\t\t\t\tpl={5}\n\t\t\t\t\t\t\tpr={0}\n\t\t\t\t\t\t\talign=\"center\"\n\t\t\t\t\t\t\t{...(listName === activeList\n\t\t\t\t\t\t\t\t? { as: 'b', bgColor: '#292D48' }\n\t\t\t\t\t\t\t\t: '')}>\n\t\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\t\tcursor=\"pointer\"\n\t\t\t\t\t\t\t\tsize=\"md\"\n\t\t\t\t\t\t\t\taria-label=\"Task list selector\"\n\t\t\t\t\t\t\t\tcolor=\"white\"\n\t\t\t\t\t\t\t\tonClick={onListSwitch}\n\t\t\t\t\t\t\t\t{...(listName.length > 20 && {\n\t\t\t\t\t\t\t\t\tisTruncated: true\n\t\t\t\t\t\t\t\t})}>\n\t\t\t\t\t\t\t\t{listName}\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t<Box width={75} mr={1}>\n\t\t\t\t\t\t\t\t{optionsAreOpen ? (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\t\t\tcolorScheme=\"whiteAlpha\"\n\t\t\t\t\t\t\t\t\t\t\tsize=\"xs\"\n\t\t\t\t\t\t\t\t\t\t\tbg=\"transparent\"\n\t\t\t\t\t\t\t\t\t\t\tisRound={true}\n\t\t\t\t\t\t\t\t\t\t\tonClick={handleEdit}\n\t\t\t\t\t\t\t\t\t\t\ticon={<EditIcon />}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\t\t\tcolorScheme=\"whiteAlpha\"\n\t\t\t\t\t\t\t\t\t\t\tisRound={true}\n\t\t\t\t\t\t\t\t\t\t\tsize=\"xs\"\n\t\t\t\t\t\t\t\t\t\t\tbg=\"transparent\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={handleDelete}\n\t\t\t\t\t\t\t\t\t\t\ticon={<DeleteIcon />}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\t\t\tsize=\"xs\"\n\t\t\t\t\t\t\t\t\t\t\tbg=\"transparent\"\n\t\t\t\t\t\t\t\t\t\t\tisRound={true}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\t\t\tsize=\"xs\"\n\t\t\t\t\t\t\t\t\t\t\tbg=\"transparent\"\n\t\t\t\t\t\t\t\t\t\t\tisRound={true}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</Flex>\n\t\t\t\t\t)}\n\t\t\t\t\t{provided.placeholder}\n\t\t\t\t</Flex>\n\t\t\t)}\n\t\t</Draggable>\n\t)\n}\n\nexport default TaskListItem\n","import { useState } from 'react'\nimport { Flex, Text } from '@chakra-ui/react'\nimport ListAddNew from '../components/ListAddNew'\nimport TaskListItem from './TaskListItem'\nimport { Droppable } from 'react-beautiful-dnd'\n\nconst TaskListOverview = ({\n\ttaskLists,\n\tactiveList,\n\tonListSwitch,\n\tdispatch\n}) => {\n\tconst [isOpen, setIsOpen] = useState(false)\n\tconst toggleAddList = () => {\n\t\tsetIsOpen(prevState => !prevState)\n\t}\n\n\tconst handleList = typeAndPayload => {\n\t\tdispatch(typeAndPayload)\n\t}\n\n\treturn (\n\t\t<Droppable droppableId=\"board\" type=\"column\" direction=\"vertical\">\n\t\t\t{provided => (\n\t\t\t\t<Flex\n\t\t\t\t\tdirection=\"column\"\n\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t{...provided.droppableProps}>\n\t\t\t\t\t{taskLists.map((listName, index) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<TaskListItem\n\t\t\t\t\t\t\t\tkey={listName}\n\t\t\t\t\t\t\t\tid={listName}\n\t\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\t\tlistName={listName}\n\t\t\t\t\t\t\t\tonDelete={handleList}\n\t\t\t\t\t\t\t\tonListSubmit={handleList}\n\t\t\t\t\t\t\t\tactiveList={activeList}\n\t\t\t\t\t\t\t\tonListSwitch={onListSwitch}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t\t{provided.placeholder}\n\t\t\t\t\t{!isOpen ? (\n\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\tpt={3}\n\t\t\t\t\t\t\tpb={3}\n\t\t\t\t\t\t\tpl={5}\n\t\t\t\t\t\t\tpr={5}\n\t\t\t\t\t\t\tsize=\"md\"\n\t\t\t\t\t\t\tcolor=\"white\"\n\t\t\t\t\t\t\tonClick={toggleAddList}>\n\t\t\t\t\t\t\t+ Add List\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<ListAddNew\n\t\t\t\t\t\t\tpt={3}\n\t\t\t\t\t\t\tpb={3}\n\t\t\t\t\t\t\tpl={5}\n\t\t\t\t\t\t\tpr={5}\n\t\t\t\t\t\t\tonSubmit={handleList}\n\t\t\t\t\t\t\thideInput={toggleAddList}\n\t\t\t\t\t\t\tisOpen={isOpen}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</Flex>\n\t\t\t)}\n\t\t</Droppable>\n\t)\n}\n\nexport default TaskListOverview\n","import { Flex, Heading, IconButton } from '@chakra-ui/react'\nimport { DragDropContext } from 'react-beautiful-dnd'\nimport { CloseIcon } from '@chakra-ui/icons'\nimport TaskListOverview from '../components/TaskListOverview'\n\nconst SideBar = ({\n\ttaskLists,\n\tactiveList,\n\tonListSwitch,\n\tdispatch,\n\tmenuIsToggled,\n\ttoggleMenu\n}) => {\n\tconst handleOnDragEnd = result => {\n\t\tif (!result.destination) return\n\t\tdispatch({\n\t\t\ttype: 'moveList',\n\t\t\tpayload: {\n\t\t\t\tsourceIndex: result.source.index,\n\t\t\t\tdestinationIndex: result.destination.index,\n\t\t\t\tdraggableId: result.draggableId\n\t\t\t}\n\t\t})\n\t}\n\n\treturn (\n\t\t<DragDropContext onDragEnd={handleOnDragEnd}>\n\t\t\t<Flex\n\t\t\t\tdirection=\"column\"\n\t\t\t\tbg=\"#424874\"\n\t\t\t\tminHeight=\"100vh\"\n\t\t\t\tw={{ base: '100%', md: 'auto', lg: '25%', xl: '20%' }}>\n\t\t\t\t<Flex justify=\"space-between\">\n\t\t\t\t\t<Heading\n\t\t\t\t\t\tsize=\"md\"\n\t\t\t\t\t\tmb={3}\n\t\t\t\t\t\tmt={5}\n\t\t\t\t\t\tml={5}\n\t\t\t\t\t\tmr={5}\n\t\t\t\t\t\tcolor=\"white\">\n\t\t\t\t\t\tTask Lists\n\t\t\t\t\t</Heading>\n\t\t\t\t\t{menuIsToggled ? (\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tmt={5}\n\t\t\t\t\t\t\tmr={5}\n\t\t\t\t\t\t\tcolorScheme=\"whiteAlpha\"\n\t\t\t\t\t\t\tonClick={toggleMenu}\n\t\t\t\t\t\t\tsize=\"xs\"\n\t\t\t\t\t\t\tisRound={true}\n\t\t\t\t\t\t\ticon={<CloseIcon />}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tmt={5}\n\t\t\t\t\t\t\tmr={5}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</Flex>\n\t\t\t\t<TaskListOverview\n\t\t\t\t\ttaskLists={taskLists}\n\t\t\t\t\tactiveList={activeList}\n\t\t\t\t\tdispatch={dispatch}\n\t\t\t\t\tonListSwitch={onListSwitch}\n\t\t\t\t/>\n\t\t\t</Flex>\n\t\t</DragDropContext>\n\t)\n}\n\nexport default SideBar\n","import { colors } from './theme'\n\nconst data = { \n\tactiveList: 'Programming',\n\tlistOrder: ['Programming', 'Work'],\n\ttaskLists: {\n\t\tProgramming: {\n\t\t\tname: 'Programming',\n\t\t\ttasks: {\n\t\t\t\t'task-1': {\n\t\t\t\t\tid: 'task-1',\n\t\t\t\t\ttitle: 'Buy supplies',\n\t\t\t\t\towner: 'Freek',\n\t\t\t\t\tcolor: colors.tasks[1]\n\t\t\t\t},\n\t\t\t\t'task-2': {\n\t\t\t\t\tid: 'task-2',\n\t\t\t\t\ttitle: 'Prepare meals',\n\t\t\t\t\towner: 'Freek',\n\t\t\t\t\tcolor: colors.tasks[3]\n\t\t\t\t},\n\t\t\t\t'task-3': {\n\t\t\t\t\tid: 'task-3',\n\t\t\t\t\ttitle: 'Pass the food to delivery person',\n\t\t\t\t\towner: 'Freek',\n\t\t\t\t\tcolor: colors.tasks[5]\n\t\t\t\t}\n\t\t\t},\n\t\t\tcolumns: {\n\t\t\t\t'column-1': {\n\t\t\t\t\tid: 'column-1',\n\t\t\t\t\ttitle: 'Backlog',\n\t\t\t\t\ttaskIds: ['task-1', 'task-2', 'task-3']\n\t\t\t\t},\n\t\t\t\t'column-2': {\n\t\t\t\t\tid: 'column-2',\n\t\t\t\t\ttitle: 'Doing',\n\t\t\t\t\ttaskIds: []\n\t\t\t\t},\n\t\t\t\t'column-3': {\n\t\t\t\t\tid: 'column-3',\n\t\t\t\t\ttitle: 'Done',\n\t\t\t\t\ttaskIds: []\n\t\t\t\t}\n\t\t\t},\n\t\t\tcolumnOrder: ['column-1', 'column-2', 'column-3']\n\t\t},\n\t\tWork: {\n\t\t\tname: 'Work',\n\t\t\ttasks: {\n\t\t\t\t'task-1': {\n\t\t\t\t\tid: 'task-1',\n\t\t\t\t\ttitle: 'Prepare board presentation',\n\t\t\t\t\towner: 'Freek',\n\t\t\t\t\tcolor: colors.tasks[1]\n\t\t\t\t},\n\t\t\t\t'task-2': {\n\t\t\t\t\tid: 'task-2',\n\t\t\t\t\ttitle: 'Develop scenario analysis',\n\t\t\t\t\towner: 'John',\n\t\t\t\t\tcolor: colors.tasks[3]\n\t\t\t\t},\n\t\t\t\t'task-3': {\n\t\t\t\t\tid: 'task-3',\n\t\t\t\t\ttitle: 'Review market trends and implications',\n\t\t\t\t\towner: 'Freek',\n\t\t\t\t\tcolor: colors.tasks[5]\n\t\t\t\t}\n\t\t\t},\n\t\t\tcolumns: {\n\t\t\t\t'column-1': {\n\t\t\t\t\tid: 'column-1',\n\t\t\t\t\ttitle: 'Not started',\n\t\t\t\t\ttaskIds: ['task-1', 'task-2', 'task-3']\n\t\t\t\t},\n\t\t\t\t'column-2': {\n\t\t\t\t\tid: 'column-2',\n\t\t\t\t\ttitle: 'In progress',\n\t\t\t\t\ttaskIds: []\n\t\t\t\t},\n\t\t\t\t'column-3': {\n\t\t\t\t\tid: 'column-3',\n\t\t\t\t\ttitle: 'Awaiting response',\n\t\t\t\t\ttaskIds: []\n\t\t\t\t},\n\t\t\t\t'column-4': {\n\t\t\t\t\tid: 'column-4',\n\t\t\t\t\ttitle: 'Approved',\n\t\t\t\t\ttaskIds: []\n\t\t\t\t}\n\t\t\t},\n\t\t\tcolumnOrder: ['column-1', 'column-2', 'column-3', 'column-4']\n\t\t}\n\t}\n}\n\nexport default data\n","import { useState, useReducer } from 'react'\nimport Body from './Body'\nimport SideBar from './layout/SideBar'\nimport { Flex, useMediaQuery } from '@chakra-ui/react'\nimport initialState from './data'\nimport { v4 as uuidv4 } from 'uuid'\nimport update from 'immutability-helper'\n\nconst reducer = (state, action) => {\n\tlet stateCopy = { ...state }\n\tswitch (action.type) {\n\t\t// list-level actions\n\t\tcase 'addList':\n\t\t\tconst newListObj = {\n\t\t\t\t[action.payload]: {\n\t\t\t\t\tname: action.payload,\n\t\t\t\t\ttasks: {},\n\t\t\t\t\tcolumns: {},\n\t\t\t\t\tcolumnOrder: []\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn update(state, {\n\t\t\t\ttaskLists: { $merge: newListObj },\n\t\t\t\tlistOrder: { $push: [action.payload] }\n\t\t\t})\n\t\tcase 'deleteList':\n\t\t\tconst indexToDelete = state.listOrder.findIndex(\n\t\t\t\ttaskList => taskList === action.payload\n\t\t\t)\n\t\t\tif (state.activeList === action.payload) {\n\t\t\t\tconst newActiveList = state.listOrder.find(\n\t\t\t\t\ttaskList => taskList !== action.payload\n\t\t\t\t)\n\t\t\t\treturn update(state, {\n\t\t\t\t\tactiveList: { $set: newActiveList },\n\t\t\t\t\ttaskLists: { $unset: [action.payload] },\n\t\t\t\t\tlistOrder: { $splice: [[indexToDelete, 1]] }\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\treturn update(state, {\n\t\t\t\t\ttaskLists: { $unset: [action.payload] },\n\t\t\t\t\tlistOrder: { $splice: [[indexToDelete, 1]] }\n\t\t\t\t})\n\t\t\t}\n\t\tcase 'renameList':\n\t\t\t// update taskListName (activeList, taskList property name, taskList.name value)\n\n\t\t\tconst renameProp = (\n\t\t\t\toldProp,\n\t\t\t\tnewProp,\n\t\t\t\t{ [oldProp]: old, ...others }\n\t\t\t) => ({\n\t\t\t\t// source: https://medium.com/front-end-weekly/immutably-rename-object-keys-in-javascript-5f6353c7b6dd\n\t\t\t\t[newProp]: old,\n\t\t\t\t...others\n\t\t\t})\n\t\t\tconst updatedTaskListNames = renameProp(\n\t\t\t\t[action.payload.listName],\n\t\t\t\t[action.payload.newName],\n\t\t\t\tstate.taskLists\n\t\t\t)\n\t\t\tupdatedTaskListNames[action.payload.newName].name =\n\t\t\t\taction.payload.newName\n\n\t\t\tconst currentIndex = state.listOrder.findIndex(\n\t\t\t\tlist => list === action.payload.listName\n\t\t\t)\n\n\t\t\treturn update(state, {\n\t\t\t\ttaskLists: { $set: updatedTaskListNames },\n\t\t\t\tlistOrder: {\n\t\t\t\t\t$splice: [[currentIndex, 1, action.payload.newName]]\n\t\t\t\t},\n\t\t\t\tactiveList: { $set: action.payload.newName }\n\t\t\t})\n\t\tcase 'selectList':\n\t\t\treturn update(state, {\n\t\t\t\tactiveList: { $set: action.payload.selectedList }\n\t\t\t})\n\t\tcase 'moveList':\n\t\t\t// not using immutability-helper splice due to expected flickering issue (see moveColumn)\n\t\t\tstateCopy.listOrder.splice(action.payload.sourceIndex, 1)\n\t\t\tstateCopy.listOrder.splice(\n\t\t\t\taction.payload.destinationIndex,\n\t\t\t\t0,\n\t\t\t\taction.payload.draggableId\n\t\t\t)\n\n\t\t\treturn stateCopy\n\t\t// column-level actions\n\t\tcase 'addColumn':\n\t\t\tconst newColumn = {\n\t\t\t\tid: uuidv4(),\n\t\t\t\ttitle: action.payload.columnName,\n\t\t\t\ttaskIds: []\n\t\t\t}\n\n\t\t\treturn update(state, {\n\t\t\t\ttaskLists: {\n\t\t\t\t\t[action.payload.activeList]: {\n\t\t\t\t\t\tcolumns: {\n\t\t\t\t\t\t\t$merge: {\n\t\t\t\t\t\t\t\t[newColumn.id]: newColumn\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcolumnOrder: { $push: [newColumn.id] }\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\tcase 'moveColumn':\n\t\t\t// not using immutability-helper splice due to flickering issue\n\t\t\tstateCopy.taskLists[state.activeList].columnOrder.splice(\n\t\t\t\taction.payload.sourceIndex,\n\t\t\t\t1\n\t\t\t)\n\t\t\tstateCopy.taskLists[state.activeList].columnOrder.splice(\n\t\t\t\taction.payload.destinationIndex,\n\t\t\t\t0,\n\t\t\t\taction.payload.draggableId\n\t\t\t)\n\t\t\treturn stateCopy\n\n\t\tcase 'renameColumn':\n\t\t\treturn update(state, {\n\t\t\t\ttaskLists: {\n\t\t\t\t\t[state.activeList]: {\n\t\t\t\t\t\tcolumns: {\n\t\t\t\t\t\t\t[action.payload.columnId]: {\n\t\t\t\t\t\t\t\ttitle: { $set: action.payload.columnName }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\tcase 'deleteColumn':\n\t\t\treturn update(state, {\n\t\t\t\ttaskLists: {\n\t\t\t\t\t[state.activeList]: {\n\t\t\t\t\t\tcolumns: {\n\t\t\t\t\t\t\t$unset: [action.payload.columnId]\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcolumnOrder: { $splice: [[action.payload.index, 1]] }\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t// task-level actions\n\t\tcase 'addTask':\n\t\t\tconst newTask = {\n\t\t\t\tid: uuidv4(),\n\t\t\t\ttitle: action.payload.taskTitle,\n\t\t\t\tcolor: '#EAEAEA',\n\t\t\t\towner: ''\n\t\t\t}\n\n\t\t\treturn update(state, {\n\t\t\t\ttaskLists: {\n\t\t\t\t\t[state.activeList]: {\n\t\t\t\t\t\ttasks: { $merge: { [newTask.id]: newTask } },\n\t\t\t\t\t\tcolumns: {\n\t\t\t\t\t\t\t[action.payload.columnId]: {\n\t\t\t\t\t\t\t\ttaskIds: { $push: [newTask.id] }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\tcase 'addDetailedTask':\n\t\t\tconst newDetailedTask = {\n\t\t\t\tid: uuidv4(),\n\t\t\t\ttitle: action.payload.title,\n\t\t\t\tcolor: action.payload.color,\n\t\t\t\towner: action.payload.owner,\n\t\t\t}\n\t\t\tconsole.log(state)\n\t\t\treturn update(state, {\n\t\t\t\ttaskLists: {\n\t\t\t\t\t[state.activeList]: {\n\t\t\t\t\t\ttasks: { $merge: { [newDetailedTask.id]: newDetailedTask } },\n\t\t\t\t\t\tcolumns: {\n\t\t\t\t\t\t\t[action.payload.columnId]: {\n\t\t\t\t\t\t\t\ttaskIds: { $push: [newDetailedTask.id] }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\tcase 'moveTask':\n\t\t\t// not using immutability-helper splice due to expected flickering issue (see moveColumn)\n\t\t\tconst {\n\t\t\t\tsourceColumn,\n\t\t\t\tsourceIndex,\n\t\t\t\tdestinationColumn,\n\t\t\t\tdestinationIndex,\n\t\t\t\tdraggableId\n\t\t\t} = action.payload\n\n\t\t\tstateCopy.taskLists[stateCopy.activeList].columns[\n\t\t\t\tsourceColumn\n\t\t\t].taskIds.splice(sourceIndex, 1)\n\t\t\tstateCopy.taskLists[stateCopy.activeList].columns[\n\t\t\t\tdestinationColumn\n\t\t\t].taskIds.splice(destinationIndex, 0, draggableId)\n\n\t\t\treturn stateCopy\n\n\t\t// TODO: fix lagging move of +Add Task on moving last task from column\n\t\tcase 'editTask':\n\t\t\tconst updatedTask = {\n\t\t\t\tid: action.payload.taskId,\n\t\t\t\ttitle: action.payload.title,\n\t\t\t\tcolor: action.payload.color,\n\t\t\t\towner: action.payload.owner\n\t\t\t}\n\t\t\tif (action.payload.sourceColumn !== action.payload.destinationColumn) {\n\t\t\t\treturn update(state, {\n\t\t\t\t\ttaskLists: {\n\t\t\t\t\t\t[state.activeList]: {\n\t\t\t\t\t\t\ttasks: { \n\t\t\t\t\t\t\t\t[action.payload.taskId]: {$set: updatedTask } },\n\t\t\t\t\t\t\tcolumns: {\n\t\t\t\t\t\t\t\t[action.payload.sourceColumn]: {\n\t\t\t\t\t\t\t\t\ttaskIds: { $splice: [[action.payload.index,1]]}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t[action.payload.destinationColumn]: {\n\t\t\t\t\t\t\t\t\ttaskIds: { $push: [action.payload.taskId]}\n\t\t\t\t\t\t\t\t}  \n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})}\n\t\t\telse return update(state, {\n\t\t\t\ttaskLists: {\n\t\t\t\t\t[state.activeList]: {\n\t\t\t\t\t\ttasks: { \n\t\t\t\t\t\t\t[action.payload.taskId]: {$set: updatedTask } }\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\tcase 'deleteTask':\n\t\t\treturn update(state, {\n\t\t\t\ttaskLists: {\n\t\t\t\t\t[state.activeList]: {\n\t\t\t\t\t\ttasks: { $unset: [action.payload.taskId] },\n\t\t\t\t\t\tcolumns: {\n\t\t\t\t\t\t\t[action.payload.columnId]: {\n\t\t\t\t\t\t\t\ttaskIds: { $splice: [[action.payload.index, 1]]}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\tcase 'changeTaskColor':\n\t\t\treturn update(state, {\n\t\t\t\ttaskLists: {\n\t\t\t\t\t[state.activeList]: {\n\t\t\t\t\t\ttasks: {\n\t\t\t\t\t\t\t[action.payload.taskId]: {\n\t\t\t\t\t\t\t\tcolor: { $set: action.payload.color }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\tdefault:\n\t\t\tthrow new Error()\n\t}\n}\n\nconst App = () => {\n\tconst [appData, dispatch] = useReducer(reducer, initialState)\n\tconst [menuIsToggled, setMenuIsToggled] = useState(false)\n\tconst [isSmallerThan768] = useMediaQuery(\"(max-width: 767px)\")\n\n\tconst handleListSwitch = event => {\n\t\tdispatch({\n\t\t\ttype: 'selectList',\n\t\t\tpayload: { selectedList: event.target.innerText }\n\t\t})\n\t}\n\n\tconst toggleMenu = () => {\n\t\tsetMenuIsToggled(prevState => !prevState)\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Flex direction={{ base: 'column', md: 'row' }}>\n\t\t\t\t{(!isSmallerThan768 || menuIsToggled) && <SideBar\n\t\t\t\t\ttaskLists={appData.listOrder}\n\t\t\t\t\tactiveList={appData.activeList}\n\t\t\t\t\tonListSwitch={handleListSwitch}\n\t\t\t\t\tdispatch={dispatch}\n\t\t\t\t\tmenuIsToggled={menuIsToggled}\n\t\t\t\t\ttoggleMenu={toggleMenu}\n\t\t\t\t/>}\n\t\t\t\t{!menuIsToggled && <Body\n\t\t\t\t\ttaskListData={appData}\n\t\t\t\t\tactiveList={appData.activeList}\n\t\t\t\t\tdispatch={dispatch}\n\t\t\t\t\ttoggleMenu={toggleMenu}\n\t\t\t\t\tmenuIsToggled={menuIsToggled}\n\t\t\t\t\tisSmallerThan768={isSmallerThan768}\n\t\t\t\t/>}\n\t\t\t</Flex>\n\t\t</>\n\t)\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ChakraProvider, ColorModeScript } from '@chakra-ui/react'\nimport App from './App';\nimport theme from './theme'\n\nReactDOM.render(\n  <React.StrictMode>\n    <ColorModeScript initialColorMode={theme.config.initialColorMode}/>\n\t\t<ChakraProvider theme={theme}>\n      <App />\n\t\t</ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)"],"sourceRoot":""}