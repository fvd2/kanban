{"version":3,"sources":["components/ColumnAddNew.js","components/TaskAddNew.js","theme.js","views/TaskView.js","components/Task.js","components/TaskOverview.js","components/Column.js","views/BoardView.js","components/TableRow.js","views/TableView.js","Body.js","components/ListAddNew.js","components/TaskListItem.js","components/TaskListOverview.js","layout/SideBar.js","reducers/task-reducer.js","App.js","index.js"],"names":["ColumnAddNew","isOpen","onClose","dispatch","activeList","initialValues","columnName","validate","values","errors","onSubmit","setSubmitting","setTimeout","type","payload","touched","isSubmitting","name","field","isInvalid","placeholder","colorScheme","mr","isDisabled","isLoading","variant","onClick","TaskAddNew","onAddTask","hideTaskInput","columnId","useState","taskTitle","setTaskTitle","inputRef","useRef","useEffect","current","focus","event","preventDefault","trim","length","onBlur","ref","value","onChange","target","colors","tasks","1","2","3","4","5","6","theme","extendTheme","config","initialColorMode","useSystemColorMode","TaskView","btnRef","heading","id","title","color","owner","index","taskHandler","columns","columnTitlesToIds","selectedColor","setSelectedColor","get","selectedColumn","setSelectedColumn","columnRef","handleColumnChange","colorButtons","map","colorId","align","size","border","m","bg","cursor","placement","finalFocusRef","taskId","sourceColumn","destinationColumn","mb","column","Task","onColorChange","onDeleteTask","onSubmitEditedTask","optionsAreOpen","setOptionsAreOpen","useDisclosure","onOpen","onCloseTaskView","handleOptions","handleEditTask","submitEditedTask","handleDeleteTask","availableColors","onClosePopover","handleColorChange","draggableId","provided","justify","onMouseEnter","onMouseOver","onFocus","onMouseLeave","pl","pt","pb","pr","borderRadius","boxShadow","height","draggableProps","innerRef","dragHandleProps","width","p","label","fontSize","textAlign","as","isTruncated","IconButton","aria-label","icon","Settings","Edit","command","Delete","TaskOverview","direction","task","Column","onColumnSubmit","onDeleteColumn","isEditingTitle","setEditingTitle","setIsOpen","toggleOptions","handleTitleSelect","prevState","handleDelete","toggleAddTask","editTitleField","handleSubmit","mt","ml","lineHeight","borderBottom","droppableId","droppableProps","BoardView","data","onDrop","display","columnOrder","taskIds","Object","marginLeft","bgColor","_hover","isRound","Add","TableRow","columnTitle","taskOwner","taskColor","portalRef","tableViewIsOpen","setTableViewIsOpen","containerRef","TableView","onAddNewDetailedTask","Body","taskListData","toggleMenu","isSmallerThan768","setData","view","setView","createTwoWayMap","setColumnTitlesToIds","taskLists","Map","concat","handleOnDragEnd","result","sourceIndex","source","destinationIndex","destination","toggleView","handleSubmitEditedTask","minWidth","onDragEnd","Hamburger","BsKanban","BsTable","typeAndPayload","ListAddNew","hideInput","listName","setListName","TaskListItem","onListSwitch","onListSubmit","onDelete","isEditing","setIsEditing","handleEdit","editListField","newName","flexGrow","TaskListOverview","toggleAddList","handleList","SideBar","menuIsToggled","minHeight","w","base","md","lg","xl","Close","updateFirebase","updatedState","a","setDoc","doc","db","console","error","taskReducer","state","action","stateCopy","newListObj","update","$merge","listOrder","$push","$set","indexToDelete","findIndex","taskList","newActiveList","find","$unset","$splice","updatedTaskListNames","oldProp","newProp","old","others","renameProp","currentIndex","list","selectedList","splice","newColumn","uuidv4","newTask","newDetailedTask","updatedTask","Error","App","useReducer","appData","isFirstRender","getFirebaseData","uuid","getDoc","retrievedDoc","userData","loadData","setIsLoading","setMenuIsToggled","useMediaQuery","innerText","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","getFirestore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.45a21038.chunk.js","sourcesContent":["import {\n\tButton,\n\tModal,\n\tModalBody,\n\tModalOverlay,\n\tModalContent,\n\tModalHeader,\n\tModalFooter,\n\tInput,\n\tFormControl,\n\tFormErrorMessage\n} from '@chakra-ui/react'\nimport { Formik, Form, Field } from 'formik'\n\nconst ColumnAddNew = ({ isOpen, onClose, dispatch, activeList }) => {\n\treturn (\n\t\t<Modal isOpen={isOpen} onClose={onClose}>\n\t\t\t<ModalOverlay />\n\t\t\t<ModalContent>\n\t\t\t\t<ModalHeader>Add a column</ModalHeader>\n\t\t\t\t<Formik\n\t\t\t\t\tinitialValues={{ columnName: '' }}\n\t\t\t\t\tvalidate={values => {\n\t\t\t\t\t\tconst errors = {}\n\t\t\t\t\t\tif (!values.columnName) {\n\t\t\t\t\t\t\terrors.columnName = 'Required'\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn errors\n\t\t\t\t\t}}\n\t\t\t\t\tonSubmit={(values, { setSubmitting }) => {\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\tdispatch({type: 'addColumn', payload: { activeList, columnName: values.columnName}})\n\t\t\t\t\t\t\tsetSubmitting(false)\n\t\t\t\t\t\t\tonClose()\n\t\t\t\t\t\t}, 100)\n\t\t\t\t\t}}>\n\t\t\t\t\t{({ errors, touched, isSubmitting }) => (\n\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t<ModalBody>\n\t\t\t\t\t\t\t\t<Field name=\"columnName\">\n\t\t\t\t\t\t\t\t\t{({ field }) => (\n\t\t\t\t\t\t\t\t\t\t<FormControl isInvalid={errors.columnName && touched.columnName}>\n\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\tname=\"columnName\"\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Column name\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<FormErrorMessage>{errors.columnName}</FormErrorMessage>\n\t\t\t\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t</ModalBody>\n\t\t\t\t\t\t\t<ModalFooter>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tcolorScheme=\"blue\"\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\tmr={3}\n\t\t\t\t\t\t\t\t\tisDisabled={errors.columnName}\n\t\t\t\t\t\t\t\t\tisLoading={isSubmitting}>\n\t\t\t\t\t\t\t\t\tAdd\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<Button variant=\"ghost\" onClick={onClose}>\n\t\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</ModalFooter>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t)}\n\t\t\t\t</Formik>\n\t\t\t</ModalContent>\n\t\t</Modal>\n\t)\n}\n\nexport default ColumnAddNew\n","import { useState, useRef, useEffect } from 'react'\nimport { Flex, Input } from '@chakra-ui/react'\n\nconst TaskAddNew = ({ onAddTask, hideTaskInput, isOpen, columnId }) => {\n\tconst [taskTitle, setTaskTitle] = useState('')\n\tconst inputRef = useRef()\n\n\tuseEffect(() => {\n\t\tif (isOpen) {\n\t\t\tinputRef.current.focus()\n\t\t}\n\t}, [isOpen])\n\n\tconst handleChange = event => {\n\t\tsetTaskTitle(event.target.value)\n\t}\n\n\tconst handleSubmit = event => {\n\t\tevent.preventDefault()\n\t\tif(taskTitle.trim().length > 0) {\n\t\t\tonAddTask(taskTitle, columnId)\n\t\t\tsetTaskTitle('')\n\t\t\thideTaskInput()\n\t\t}\n\t\telse {\n\t\t\thideTaskInput()\n\t\t}\n\t}\n\n\tconst handleBlur = () => {\n\t\thideTaskInput()\n\t}\n\n\treturn (\n\t\t<form onSubmit={handleSubmit} onBlur={handleBlur}>\n\t\t\t<Flex>\n\t\t\t\t<Input\n\t\t\t\t\tref={inputRef}\n\t\t\t\t\tvalue={taskTitle}\n\t\t\t\t\tplaceholder=\"Your next task\"\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t/>\n\t\t\t</Flex>\n\t\t</form>\n\t)\n}\n\nexport default TaskAddNew\n","import { extendTheme } from '@chakra-ui/react'\n\nconst config = {\n\tinitialColorMode: 'light',\n\tuseSystemColorMode: true\n}\n\nexport const colors = {\n\ttasks: {\n\t\t1: '#F56565',\n\t\t2: '#ED8936',\n\t\t3: '#48BB78',\n\t\t4: '#38B2AC',\n\t\t5: '#4299e1',\n\t\t6: '#EAEAEA'\n\t}\n}\n\nconst theme = extendTheme({ config })\n\nexport default theme\n","import { useEffect, useRef, useState } from 'react'\nimport {\n\tButton,\n\tCircle,\n\tDrawer,\n\tDrawerBody,\n\tDrawerFooter,\n\tDrawerHeader,\n\tDrawerOverlay,\n\tDrawerContent,\n\tDrawerCloseButton,\n\tFlex,\n\tFormControl,\n\tFormErrorMessage,\n\tInput,\n\tSelect,\n\tText\n} from '@chakra-ui/react'\nimport { Formik, Form, Field } from 'formik'\nimport { colors } from '../theme'\n\nconst TaskView = ({\n\tbtnRef,\n\tisOpen,\n\tonClose,\n\theading,\n\tid,\n\ttitle,\n\tcolor,\n\towner,\n\tindex,\n\ttaskHandler,\n\tcolumnId,\n\tcolumns,\n\tcolumnTitlesToIds\n}) => {\n\tconst [selectedColor, setSelectedColor] = useState(color)\n\tconst [selectedColumn, setSelectedColumn] = useState(columnTitlesToIds.get(columnId))\n\tconst availableColors = [1, 2, 3, 4, 5, 6]\n\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tonClose()\n\t\t}\n\t},[onClose])\n\n\tconst columnRef = useRef(columnTitlesToIds.get(columnId))\n\tconst handleColumnChange = () => {\n\t\tsetSelectedColumn(columnRef.current.value)\n\t}\n\t\n\tconst colorButtons = availableColors.map(colorId => {\n\t\tif (selectedColor === colors.tasks[colorId].trim()) {\n\t\t\treturn (\n\t\t\t\t<Circle\n\t\t\t\t\tkey={colorId}\n\t\t\t\t\talign=\"center\"\n\t\t\t\t\tsize=\"24px\"\n\t\t\t\t\tborder=\"2px solid black\"\n\t\t\t\t\tm={0.5}\n\t\t\t\t\tbg={colors.tasks[colorId]}\n\t\t\t\t/>\n\t\t\t)\n\t\t} else\n\t\t\treturn (\n\t\t\t\t<Circle\n\t\t\t\t\tkey={colorId}\n\t\t\t\t\talign=\"center\"\n\t\t\t\t\tcursor=\"pointer\"\n\t\t\t\t\tsize=\"24px\"\n\t\t\t\t\tborder=\"2px solid white\"\n\t\t\t\t\tm={0.5}\n\t\t\t\t\tbg={colors.tasks[colorId]}\n\t\t\t\t\tonClick={() => setSelectedColor(colors.tasks[colorId])}\n\t\t\t\t/>\n\t\t\t)\n\t})\n\n\treturn (\n\t\t<Drawer\n\t\t\tisOpen={isOpen}\n\t\t\tonClose={onClose}\n\t\t\tplacement=\"right\"\n\t\t\tfinalFocusRef={btnRef}>\n\t\t\t<DrawerOverlay />\n\t\t\t<DrawerContent>\n\t\t\t\t<DrawerCloseButton />\n\t\t\t\t<DrawerHeader>{heading}</DrawerHeader>\n\t\t\t\t<Formik\n\t\t\t\t\tinitialValues={{\n\t\t\t\t\t\ttitle,\n\t\t\t\t\t\towner\n\t\t\t\t\t}}\n\t\t\t\t\tvalidate={values => {\n\t\t\t\t\t\tconst errors = {}\n\t\t\t\t\t\tif (!values.title) {\n\t\t\t\t\t\t\terrors.title = 'Required'\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn errors\n\t\t\t\t\t}}\n\t\t\t\t\tonSubmit={(values, { setSubmitting }) => {\n\t\t\t\t\t\ttaskHandler({\n\t\t\t\t\t\t\ttaskId: id,\n\t\t\t\t\t\t\ttitle: values.title,\n\t\t\t\t\t\t\towner: values.owner,\n\t\t\t\t\t\t\tcolor: selectedColor,\n\t\t\t\t\t\t\tsourceColumn: columnId,\n\t\t\t\t\t\t\tcolumnId: columnTitlesToIds.get(selectedColumn),\n\t\t\t\t\t\t\tdestinationColumn:\n\t\t\t\t\t\t\t\tcolumnTitlesToIds.get(selectedColumn),\n\t\t\t\t\t\t\tindex: index\n\t\t\t\t\t\t})\n\t\t\t\t\t\tsetSubmitting(false)\n\t\t\t\t\t\tonClose()\n\t\t\t\t\t}}>\n\t\t\t\t\t{({ errors, touched, isSubmitting }) => (\n\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t<DrawerBody>\n\t\t\t\t\t\t\t\t<Field name=\"title\">\n\t\t\t\t\t\t\t\t\t{({ field }) => (\n\t\t\t\t\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\t\t\t\t\tmb={3}\n\t\t\t\t\t\t\t\t\t\t\tisInvalid={\n\t\t\t\t\t\t\t\t\t\t\t\terrors.title && touched.title\n\t\t\t\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t\t\t\t<Text>Title:</Text>\n\t\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"title\"\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Task title\"\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t<FormErrorMessage>\n\t\t\t\t\t\t\t\t\t\t\t\t{errors.title}\n\t\t\t\t\t\t\t\t\t\t\t</FormErrorMessage>\n\t\t\t\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t\t<Field name=\"owner\">\n\t\t\t\t\t\t\t\t\t{({ field }) => (\n\t\t\t\t\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\t\t\t\t\tmb={3}\n\t\t\t\t\t\t\t\t\t\t\tisInvalid={\n\t\t\t\t\t\t\t\t\t\t\t\terrors.owner && touched.owner\n\t\t\t\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t\t\t\t<Text>Owner:</Text>\n\t\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"owner\"\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Task owner\"\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t<FormErrorMessage>\n\t\t\t\t\t\t\t\t\t\t\t\t{errors.owner}\n\t\t\t\t\t\t\t\t\t\t\t</FormErrorMessage>\n\t\t\t\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<Text>Category:</Text>\n\t\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\t\tref={columnRef}\n\t\t\t\t\t\t\t\t\t\tonChange={handleColumnChange}\n\t\t\t\t\t\t\t\t\t\tmb={3}>\n\t\t\t\t\t\t\t\t\t\t<option\n\t\t\t\t\t\t\t\t\t\t\tkey={columnId}\n\t\t\t\t\t\t\t\t\t\t\tvalue={columnTitlesToIds.get(\n\t\t\t\t\t\t\t\t\t\t\t\tcolumnId\n\t\t\t\t\t\t\t\t\t\t\t)}>\n\t\t\t\t\t\t\t\t\t\t\t{columnTitlesToIds.get(columnId)}\n\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t{columns.map(column => {\n\t\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\t\tcolumn ===\n\t\t\t\t\t\t\t\t\t\t\t\tcolumnTitlesToIds.get(columnId)\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\treturn ''\n\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t<option\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={column}\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={column}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{column}\n\t\t\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t\t\t<Text>Color:</Text>\n\t\t\t\t\t\t\t\t\t<Flex>{colorButtons}</Flex>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t</DrawerBody>\n\t\t\t\t\t\t\t<DrawerFooter>\n\t\t\t\t\t\t\t\t<Button variant=\"ghost\" onClick={onClose}>\n\t\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tcolorScheme=\"blue\"\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\tmr={3}\n\t\t\t\t\t\t\t\t\tisDisabled={errors.title || errors.owner}\n\t\t\t\t\t\t\t\t\tisLoading={isSubmitting}>\n\t\t\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</DrawerFooter>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t)}\n\t\t\t\t</Formik>\n\t\t\t</DrawerContent>\n\t\t</Drawer>\n\t)\n}\n\nexport default TaskView\n","import { useState, useRef } from 'react'\nimport { Draggable } from 'react-beautiful-dnd'\nimport {\n\tAvatar,\n\tCircle,\n\tContainer,\n\tFlex,\n\tIconButton,\n\tMenu,\n\tMenuButton,\n\tMenuItem,\n\tMenuList,\n\tPopover,\n\tPopoverContent,\n\tPopoverTrigger,\n\tPortal,\n\tText,\n\tTooltip,\n\tuseDisclosure\n} from '@chakra-ui/react'\nimport { colors } from '../theme'\nimport { SettingsIcon, DeleteIcon, EditIcon } from '@chakra-ui/icons'\nimport TaskView from '../views/TaskView'\n\nconst Task = ({\n\tid,\n\tindex,\n\ttitle,\n\tcolor,\n\towner,\n\tonColorChange,\n\tonDeleteTask,\n\tcolumnId,\n\tonSubmitEditedTask,\n\tcolumns,\n\tcolumnTitlesToIds\n}) => {\n\tconst [optionsAreOpen, setOptionsAreOpen] = useState(false)\n\tconst { isOpen, onOpen, onClose: onCloseTaskView } = useDisclosure()\n\tconst btnRef = useRef()\n\tconst handleColorChange = (colorId, onClosePopover) => {\n\t\tonColorChange(id, colors.tasks[colorId])\n\t\tonClosePopover()\n\t}\n\n\tconst handleOptions = event => {\n\t\tif (event.type === 'mouseenter' || event.type === 'mouseover') {\n\t\t\tsetOptionsAreOpen(true)\n\t\t}\n\t\tif (event.type === 'mouseleave') {\n\t\t\tsetOptionsAreOpen(false)\n\t\t}\n\t}\n\n\tconst handleEditTask = () => {\n\t\tonOpen()\n\t}\n\n\tconst submitEditedTask = payload => {\n\t\tonSubmitEditedTask(payload)\n\t}\n\n\tconst handleDeleteTask = () => {\n\t\tonDeleteTask(columnId, id, index)\n\t}\n\n\tconst availableColors = [1, 2, 3, 4, 5, 6]\n\tconst colorButtons = onClose =>\n\t\tavailableColors.map(colorId => (\n\t\t\t<Circle\n\t\t\t\tkey={colorId}\n\t\t\t\talign=\"center\"\n\t\t\t\tsize=\"16px\"\n\t\t\t\tm={0.5}\n\t\t\t\tbg={colors.tasks[colorId]}\n\t\t\t\tonClick={() => handleColorChange(colorId, onClose)}\n\t\t\t/>\n\t\t))\n\n\treturn (\n\t\t<>\n\t\t\t<Draggable draggableId={id} index={index}>\n\t\t\t\t{provided => (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Container\n\t\t\t\t\t\t\tjustify=\"center\"\n\t\t\t\t\t\t\tonMouseEnter={handleOptions}\n\t\t\t\t\t\t\tonMouseOver={handleOptions}\n\t\t\t\t\t\t\tonFocus={handleOptions}\n\t\t\t\t\t\t\tonMouseLeave={handleOptions}\n\t\t\t\t\t\t\tbg=\"white\"\n\t\t\t\t\t\t\tmb={1}\n\t\t\t\t\t\t\tpl={2}\n\t\t\t\t\t\t\tpt={1}\n\t\t\t\t\t\t\tpb={1}\n\t\t\t\t\t\t\tpr={0.5}\n\t\t\t\t\t\t\tborder=\"1px solid #CACFD6\"\n\t\t\t\t\t\t\tborderRadius={2}\n\t\t\t\t\t\t\tboxShadow={'2x1'}\n\t\t\t\t\t\t\theight=\"auto\"\n\t\t\t\t\t\t\t{...provided.draggableProps}\n\t\t\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t\t\t{...provided.dragHandleProps}>\n\t\t\t\t\t\t\t<Flex align=\"center\">\n\t\t\t\t\t\t\t\t<Popover>\n\t\t\t\t\t\t\t\t\t{({ onClose }) => (\n\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t<PopoverTrigger>\n\t\t\t\t\t\t\t\t\t\t\t\t<Circle\n\t\t\t\t\t\t\t\t\t\t\t\t\talign=\"center\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"16px\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tbg={color}\n\t\t\t\t\t\t\t\t\t\t\t\t\tmr={1}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</PopoverTrigger>\n\t\t\t\t\t\t\t\t\t\t\t<Portal>\n\t\t\t\t\t\t\t\t\t\t\t\t<PopoverContent\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth=\"auto\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tp={1}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Flex>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{colorButtons(onClose)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Flex>\n\t\t\t\t\t\t\t\t\t\t\t\t</PopoverContent>\n\t\t\t\t\t\t\t\t\t\t\t</Portal>\n\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Popover>\n\t\t\t\t\t\t\t\t{/* TODO: only show tooltip if text is truncated */}\n\t\t\t\t\t\t\t\t<Flex\n\t\t\t\t\t\t\t\t\tjustify=\"space-between\"\n\t\t\t\t\t\t\t\t\talign=\"center\"\n\t\t\t\t\t\t\t\t\twidth=\"90%\">\n\t\t\t\t\t\t\t\t\t<Tooltip label={title}>\n\t\t\t\t\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\t\t\t\t\tfontSize=\"sm\"\n\t\t\t\t\t\t\t\t\t\t\ttextAlign=\"center\"\n\t\t\t\t\t\t\t\t\t\t\tas=\"b\"\n\t\t\t\t\t\t\t\t\t\t\tisTruncated>\n\t\t\t\t\t\t\t\t\t\t\t{title}\n\t\t\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t\t<TaskView\n\t\t\t\t\t\t\t\t\t\tbtnRef={btnRef}\n\t\t\t\t\t\t\t\t\t\tisOpen={isOpen}\n\t\t\t\t\t\t\t\t\t\tonClose={onCloseTaskView}\n\t\t\t\t\t\t\t\t\t\theading=\"Edit task\"\n\t\t\t\t\t\t\t\t\t\tid={id}\n\t\t\t\t\t\t\t\t\t\ttitle={title}\n\t\t\t\t\t\t\t\t\t\tcolor={color}\n\t\t\t\t\t\t\t\t\t\towner={owner}\n\t\t\t\t\t\t\t\t\t\ttaskHandler={submitEditedTask}\n\t\t\t\t\t\t\t\t\t\tcolumns={columns}\n\t\t\t\t\t\t\t\t\t\tcolumnTitlesToIds={columnTitlesToIds}\n\t\t\t\t\t\t\t\t\t\tcolumnId={columnId}\n\t\t\t\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t{optionsAreOpen ? (\n\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t<Menu>\n\t\t\t\t\t\t\t\t\t\t\t\t<MenuButton\n\t\t\t\t\t\t\t\t\t\t\t\t\tas={IconButton}\n\t\t\t\t\t\t\t\t\t\t\t\t\taria-label=\"display task settings\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"unstyled\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"xs\"\n\t\t\t\t\t\t\t\t\t\t\t\t\ticon={<SettingsIcon />}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t<MenuList>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ticon={<EditIcon />}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcommand=\"E\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleEditTask}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tref={btnRef}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tEdit\n\t\t\t\t\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ticon={<DeleteIcon />}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcommand=\"D\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleDeleteTask\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t\t\t\t\t</MenuList>\n\t\t\t\t\t\t\t\t\t\t\t</Menu>\n\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"unstyled\"\n\t\t\t\t\t\t\t\t\t\t\tsize=\"xs\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Flex>\n\t\t\t\t\t\t\t</Flex>\n\t\t\t\t\t\t\t{owner && (\n\t\t\t\t\t\t\t\t<Flex align=\"center\">\n\t\t\t\t\t\t\t\t\t<Avatar size=\"2xs\" mr={1}></Avatar>\n\t\t\t\t\t\t\t\t\t<Text fontSize=\"sm\">{owner}</Text>\n\t\t\t\t\t\t\t\t</Flex>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Container>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</Draggable>\n\t\t</>\n\t)\n}\n\nexport default Task\n","import { Flex } from \"@chakra-ui/react\"\nimport Task from \"./Task\"\n\nconst TaskOverview = ({ tasks, onColorChange, onDeleteTask, onSubmitEditedTask, columnId, columns, columnTitlesToIds }) => {\n\n    return (<Flex direction=\"column\">\n        {tasks.map((task, index) => <Task key={task.id} id={task.id} title={task.title} owner={task.owner} color={task.color} index={index} onColorChange={onColorChange} columnTitlesToIds={columnTitlesToIds} onDeleteTask={onDeleteTask} columnId={columnId} onSubmitEditedTask={onSubmitEditedTask} columns={columns}></Task>)}\n        </Flex>)\n}\n\nexport default TaskOverview","import { useState, useRef, useEffect } from 'react'\nimport { Draggable, Droppable } from 'react-beautiful-dnd'\nimport {\n\tBox,\n\tContainer,\n\tFlex,\n\tFormControl,\n\tHeading,\n\tIconButton,\n\tInput,\n\tText\n} from '@chakra-ui/react'\nimport { Formik, Form, Field } from 'formik'\nimport TaskAddNew from '../components/TaskAddNew'\nimport TaskOverview from './TaskOverview'\nimport { DeleteIcon, EditIcon } from '@chakra-ui/icons'\n\nconst Column = ({\n\twidth,\n\tid,\n\ttitle,\n\ttasks,\n\tindex,\n\tonColumnSubmit,\n\tonColorChange,\n\tonDeleteColumn,\n\tonAddTask,\n\tactiveList,\n\tonDeleteTask,\n\tonSubmitEditedTask,\n\tcolumns,\n\tcolumnTitlesToIds\n}) => {\n\tconst [optionsAreOpen, setOptionsAreOpen] = useState(false)\n\tconst [isEditingTitle, setEditingTitle] = useState(false)\n\tconst [isOpen, setIsOpen] = useState(false)\n\tconst inputRef = useRef()\n\n\tuseEffect(() => {\n\t\tif (isEditingTitle) {\n\t\t\tinputRef.current.focus()\n\t\t}\n\t}, [isEditingTitle])\n\n\tconst toggleOptions = event => {\n\t\tif (event.type === 'mouseover' || event.type === 'mouseenter') {\n\t\t\tsetOptionsAreOpen(true)\n\t\t}\n\t\tif (event.type === 'mouseleave') {\n\t\t\tsetOptionsAreOpen(false)\n\t\t}\n\t}\n\n\tconst handleTitleSelect = () => {\n\t\tsetEditingTitle(prevState => !prevState)\n\t}\n\n\tconst handleDelete = () => {\n\t\tonDeleteColumn({\n\t\t\ttype: 'deleteColumn',\n\t\t\tpayload: { columnId: id, index }\n\t\t})\n\t}\n\n\tconst toggleAddTask = () => {\n\t\tsetIsOpen(prevState => !prevState)\n\t}\n\n\tconst editTitleField = (\n\t\t<Formik\n\t\t\tinitialValues={{ columnName: title }}\n\t\t\tvalidate={values => {\n\t\t\t\tconst errors = {}\n\t\t\t\tif (!values.columnName) {\n\t\t\t\t\terrors.columnName = 'Required'\n\t\t\t\t}\n\t\t\t\treturn errors\n\t\t\t}}\n\t\t\tonSubmit={values => {\n\t\t\t\tonColumnSubmit(id, values.columnName)\n\t\t\t\thandleTitleSelect()\n\t\t\t}}>\n\t\t\t{({ handleSubmit, errors }) => (\n\t\t\t\t<Form>\n\t\t\t\t\t<Field name=\"columnName\">\n\t\t\t\t\t\t{({ field }) => (\n\t\t\t\t\t\t\t<FormControl isInvalid={errors.columnName}>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\tref={inputRef}\n\t\t\t\t\t\t\t\t\tname=\"columnName\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"Column name\"\n\t\t\t\t\t\t\t\t\tonBlur={handleSubmit}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Field>\n\t\t\t\t</Form>\n\t\t\t)}\n\t\t</Formik>\n\t)\n\n\treturn (\n\t\t<Box>\n\t\t\t<Draggable draggableId={id} index={index}>\n\t\t\t\t{provided => (\n\t\t\t\t\t<Container\n\t\t\t\t\t\twidth={width}\n\t\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t\t{...provided.draggableProps}\n\t\t\t\t\t\t{...provided.dragHandleProps}\n\t\t\t\t\t\tmt={2}\n\t\t\t\t\t\tp={3}>\n\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\talign=\"center\"\n\t\t\t\t\t\t\tbg=\"#FFFFFF\"\n\t\t\t\t\t\t\tmb={3}\n\t\t\t\t\t\t\tp={0}\n\t\t\t\t\t\t\tborder=\"1px solid #CACFD6\"\n\t\t\t\t\t\t\tborderRadius={2}>\n\t\t\t\t\t\t\t{isEditingTitle ? (\n\t\t\t\t\t\t\t\teditTitleField\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<Flex\n\t\t\t\t\t\t\t\t\tonMouseEnter={toggleOptions}\n\t\t\t\t\t\t\t\t\tonMouseOver={toggleOptions}\n\t\t\t\t\t\t\t\t\tonMouseLeave={toggleOptions}\n\t\t\t\t\t\t\t\t\talign=\"center\"\n\t\t\t\t\t\t\t\t\tjustify=\"space-between\">\n\t\t\t\t\t\t\t\t\t<Heading\n\t\t\t\t\t\t\t\t\t\tml={3}\n\t\t\t\t\t\t\t\t\t\tmt={1}\n\t\t\t\t\t\t\t\t\t\tmb={1}\n\t\t\t\t\t\t\t\t\t\talign=\"center\"\n\t\t\t\t\t\t\t\t\t\tlineHeight=\"unset\"\n\t\t\t\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\t\t\t\tisTruncated>\n\t\t\t\t\t\t\t\t\t\t{title}\n\t\t\t\t\t\t\t\t\t</Heading>\n\t\t\t\t\t\t\t\t\t{optionsAreOpen ? (\n\t\t\t\t\t\t\t\t\t\t<Flex>\n\t\t\t\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleTitleSelect}\n\t\t\t\t\t\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"unstyled\"\n\t\t\t\t\t\t\t\t\t\t\t\ticon={<EditIcon />}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleDelete}\n\t\t\t\t\t\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"unstyled\"\n\t\t\t\t\t\t\t\t\t\t\t\ticon={<DeleteIcon />}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Flex>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<Flex>\n\t\t\t\t\t\t\t\t\t\t\t<IconButton size=\"sm\" variant=\"unstyled\"/>\n\t\t\t\t\t\t\t\t\t\t</Flex>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Flex>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<Box mb={3} borderBottom=\"2px solid #CACFD6\" />\n\t\t\t\t\t\t<Droppable droppableId={id} type=\"task\" index={index}>\n\t\t\t\t\t\t\t{provided => (\n\t\t\t\t\t\t\t\t<div ref={provided.innerRef}>\n\t\t\t\t\t\t\t\t\t<TaskOverview\n\t\t\t\t\t\t\t\t\t\t{...provided.droppableProps}\n\t\t\t\t\t\t\t\t\t\ttasks={tasks}\n\t\t\t\t\t\t\t\t\t\tonColorChange={onColorChange}\n\t\t\t\t\t\t\t\t\t\tactiveList={activeList}\n\t\t\t\t\t\t\t\t\t\tcolumnId={id}\n\t\t\t\t\t\t\t\t\t\tonDeleteTask={onDeleteTask}\n\t\t\t\t\t\t\t\t\t\tonSubmitEditedTask={onSubmitEditedTask}\n\t\t\t\t\t\t\t\t\t\tcolumns={columns}\n\t\t\t\t\t\t\t\t\t\tcolumnTitlesToIds={columnTitlesToIds}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t{provided.placeholder}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Droppable>\n\t\t\t\t\t\t{provided.placeholder}\n\t\t\t\t\t\t{!isOpen ? (\n\t\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\t\tjustify=\"center\"\n\t\t\t\t\t\t\t\tcolor=\"#666666\"\n\t\t\t\t\t\t\t\taria-label=\"Add task button\"\n\t\t\t\t\t\t\t\tonClick={toggleAddTask}>\n\t\t\t\t\t\t\t\t+ Add Task\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<TaskAddNew\n\t\t\t\t\t\t\t\tonAddTask={onAddTask}\n\t\t\t\t\t\t\t\thideTaskInput={toggleAddTask}\n\t\t\t\t\t\t\t\tisOpen={isOpen}\n\t\t\t\t\t\t\t\tcolumnId={id}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Container>\n\t\t\t\t)}\n\t\t\t</Draggable>\n\t\t</Box>\n\t)\n}\n\nexport default Column\n","import Column from '../components/Column'\nimport { Box, IconButton } from '@chakra-ui/react'\nimport { AddIcon } from '@chakra-ui/icons'\nimport { Droppable } from 'react-beautiful-dnd'\n\nconst BoardView = ({\n\tdata,\n\tonOpen,\n\tonDrop,\n\tonColumnSubmit,\n\tonColorChange,\n\tonAddTask,\n\tonDeleteColumn,\n\tonDeleteTask,\n\tonSubmitEditedTask,\n\tcolumnTitlesToIds\n}) => {\n\treturn (\n\t\t<Droppable droppableId=\"board\" type=\"column\" direction=\"horizontal\">\n\t\t\t{provided => (\n\t\t\t\t<>\n\t\t\t\t\t{data && (\n\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\tdisplay=\"flex\"\n\t\t\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t\t\t{...provided.droppableProps}>\n\t\t\t\t\t\t\t{data.columnOrder.map((columnId, index) => (\n\t\t\t\t\t\t\t\t<Column\n\t\t\t\t\t\t\t\t\twidth=\"250px\"\n\t\t\t\t\t\t\t\t\tkey={columnId}\n\t\t\t\t\t\t\t\t\tid={columnId}\n\t\t\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\t\t\ttitle={data.columns[columnId].title}\n\t\t\t\t\t\t\t\t\ttaskIds={data.columns[columnId].taskIds}\n\t\t\t\t\t\t\t\t\ttasks={data.columns[columnId].taskIds.map(\n\t\t\t\t\t\t\t\t\t\ttaskId => data.tasks[taskId]\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\tonDrop={onDrop}\n\t\t\t\t\t\t\t\t\tonColumnSubmit={onColumnSubmit}\n\t\t\t\t\t\t\t\t\tonColorChange={onColorChange}\n\t\t\t\t\t\t\t\t\tonAddTask={onAddTask}\n\t\t\t\t\t\t\t\t\tonDeleteColumn={onDeleteColumn}\n\t\t\t\t\t\t\t\t\tonDeleteTask={onDeleteTask}\n\t\t\t\t\t\t\t\t\tonSubmitEditedTask={onSubmitEditedTask}\n\t\t\t\t\t\t\t\t\tcolumns={Object.values(data.columns).map(column => column.title)}\n\t\t\t\t\t\t\t\t\tcolumnTitlesToIds={columnTitlesToIds}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t{provided.placeholder}\n\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\tmt={6}\n\t\t\t\t\t\t\t\t{...data.columnOrder.length < 1 ? {marginLeft: 5 } : ''}\n\t\t\t\t\t\t\t\tsize=\"xs\"\n\t\t\t\t\t\t\t\tbgColor=\"#424874\"\n\t\t\t\t\t\t\t\tcolor=\"#FFFFFF\"\n\t\t\t\t\t\t\t\t_hover={{ bgColor: '#292D48'}}\n\t\t\t\t\t\t\t\tisRound={true}\n\t\t\t\t\t\t\t\taria-label=\"Add column button\"\n\t\t\t\t\t\t\t\ticon={<AddIcon />}\n\t\t\t\t\t\t\t\tonClick={onOpen}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t)}\n\t\t\t\t</>\n\t\t\t)}\n\t\t</Droppable>\n\t)\n}\n\nexport default BoardView\n","import { useState, useRef } from 'react'\nimport { Circle, IconButton, Portal, Tr, Td, useDisclosure } from '@chakra-ui/react'\nimport { DeleteIcon, EditIcon } from '@chakra-ui/icons'\nimport TaskView from '../views/TaskView'\n\nconst TableRow = ({\n\tcolumnTitle,\n\tcolumnId,\n\ttaskId,\n\ttaskTitle,\n\ttaskOwner,\n\ttaskColor,\n\tindex,\n\ttaskHandler,\n\tportalRef,\n\tonDeleteTask,\n\tcolumnTitlesToIds,\n\tcolumns\n}) => {\n\tconst { isOpen, onOpen, onClose } = useDisclosure()\n\tconst [tableViewIsOpen, setTableViewIsOpen] = useState(false)\n\tconst btnRef = useRef()\n\n\tconst toggleTaskView = () => {\n\t\tsetTableViewIsOpen(true)\n\t\tonOpen()\n\t}\n\n\tconst handleDeleteTask = () => {\n\t\tonDeleteTask(columnId, taskId, index)\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{tableViewIsOpen && <Portal containerRef={portalRef}>\n\t\t\t\t<TaskView\n\t\t\t\t\tbtnRef={btnRef}\n\t\t\t\t\tisOpen={isOpen}\n\t\t\t\t\tonClose={onClose}\n\t\t\t\t\theading=\"Edit task\"\n\t\t\t\t\tid={taskId}\n\t\t\t\t\ttitle={taskTitle}\n\t\t\t\t\tcolor={taskColor}\n\t\t\t\t\towner={taskOwner}\n\t\t\t\t\ttaskHandler={taskHandler}\n\t\t\t\t\tcolumns={columns}\n\t\t\t\t\tcolumnTitlesToIds={columnTitlesToIds}\n\t\t\t\t\tcolumnId={columnId}\n\t\t\t\t\tindex={index}\n\t\t\t\t/>\n\t\t\t</Portal>}\n\t\t\t<Tr\n\t\t\t\tkey={taskId}>\n\t\t\t\t<Td>{columnTitle}</Td>\n\t\t\t\t<Td>{taskTitle}</Td>\n\t\t\t\t<Td>{taskOwner}</Td>\n\t\t\t\t<Td><Circle\n\t\t\t\t\tsize=\"20px\"\n\t\t\t\t\talign=\"center\"\n\t\t\t\t\tjustify=\"center\"\n\t\t\t\t\tborder=\"1px solid black\"\n\t\t\t\t\tm={0.5}\n\t\t\t\t\tbg={taskColor}/></Td>\n\t\t\t\t\t<Td>\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tsize=\"xs\"\n\t\t\t\t\t\t\tvariant=\"unstyled\"\n\t\t\t\t\t\t\ticon={<EditIcon />}\n\t\t\t\t\t\t\tonClick={toggleTaskView}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tsize=\"xs\"\n\t\t\t\t\t\t\tvariant=\"unstyled\"\n\t\t\t\t\t\t\ticon={<DeleteIcon />}\n\t\t\t\t\t\t\tonClick={handleDeleteTask}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Td>\n\t\t\t</Tr>\n\t\t</>\n\t)\n}\n\nexport default TableRow\n","import { useRef } from 'react'\nimport {\n\tBox,\n\tFlex,\n\tTable,\n\tThead,\n\tTr,\n\tTh,\n\tTbody,\n\tText,\n\tuseDisclosure\n} from '@chakra-ui/react'\nimport TaskView from './TaskView'\nimport TableRow from '../components/TableRow'\n\nconst TableView = ({\n\tdata,\n\tonAddNewDetailedTask,\n\tcolumnTitlesToIds,\n\tonSubmitEditedTask,\n\tonDeleteTask\n}) => {\n\tconst { isOpen, onOpen, onClose } = useDisclosure()\n\tconst btnRef = useRef()\n\tconst portalRef = useRef()\n\n\tconst submitNewDetailedTask = payload => {\n\t\tonAddNewDetailedTask(payload)\n\t}\n\n\tconst submitEditedTask = payload => {\n\t\tonSubmitEditedTask(payload)\n\t}\n\n\tconst toggleTaskView = () => {\n\t\tonOpen()\n\t}\n\n\treturn (\n\t\t<Flex ref={portalRef} direction=\"column\">\n\t\t\t<Box\n\t\t\t\talign=\"center\"\n\t\t\t\tbg=\"#FFFFFF\"\n\t\t\t\tmt={5}\n\t\t\t\tml={5}\n\t\t\t\tp={0}\n\t\t\t\tborder=\"1px solid #CACFD6\"\n\t\t\t\tborderRadius={2}>\n\t\t\t\t<Table variant=\"simple\" size=\"sm\">\n\t\t\t\t\t<Thead bgColor=\"#5B8266\">\n\t\t\t\t\t\t<Tr>\n\t\t\t\t\t\t\t<Th color=\"#FFFFFF\">Category</Th>\n\t\t\t\t\t\t\t<Th color=\"#FFFFFF\">Task</Th>\n\t\t\t\t\t\t\t<Th color=\"#FFFFFF\">Owner</Th>\n\t\t\t\t\t\t\t<Th color=\"#FFFFFF\">Color</Th>\n\t\t\t\t\t\t\t<Th color=\"#FFFFFF\">Options</Th>\n\t\t\t\t\t\t</Tr>\n\t\t\t\t\t</Thead>\n\t\t\t\t\t<Tbody>\n\t\t\t\t\t\t{data && Object.values(data.columns).map(column =>\n\t\t\t\t\t\t\tcolumn.taskIds.map((task, index) => (\n\t\t\t\t\t\t\t\t<TableRow\n\t\t\t\t\t\t\t\t\tkey={data.tasks[task].id}\n\t\t\t\t\t\t\t\t\tcolumnTitle={column.title}\n\t\t\t\t\t\t\t\t\tcolumnId={column.id}\n\t\t\t\t\t\t\t\t\ttaskId={data.tasks[task].id}\n\t\t\t\t\t\t\t\t\ttaskTitle={data.tasks[task].title}\n\t\t\t\t\t\t\t\t\ttaskOwner={data.tasks[task].owner}\n\t\t\t\t\t\t\t\t\ttaskColor={data.tasks[task].color}\n\t\t\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\t\t\tportalRef={portalRef}\n\t\t\t\t\t\t\t\t\ttaskHandler={submitEditedTask}\n\t\t\t\t\t\t\t\t\tonDeleteTask={onDeleteTask}\n\t\t\t\t\t\t\t\t\tcolumns={Object.values(data.columns).map(\n\t\t\t\t\t\t\t\t\t\tcolumn => column.title\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\tcolumnTitlesToIds={columnTitlesToIds}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Tbody>\n\t\t\t\t</Table>\n\t\t\t\t{isOpen && (\n\t\t\t\t\t<TaskView\n\t\t\t\t\t\tbtnRef={btnRef}\n\t\t\t\t\t\tisOpen={isOpen}\n\t\t\t\t\t\tonClose={onClose}\n\t\t\t\t\t\theading=\"Create new task\"\n\t\t\t\t\t\tid={''}\n\t\t\t\t\t\ttitle={''}\n\t\t\t\t\t\tcolor=\"#EAEAEA\"\n\t\t\t\t\t\towner={''}\n\t\t\t\t\t\ttaskHandler={submitNewDetailedTask}\n\t\t\t\t\t\tcolumns={Object.values(data.columns).map(\n\t\t\t\t\t\t\tcolumn => column.title\n\t\t\t\t\t\t)}\n\t\t\t\t\t\tcolumnId={Object.values(data.columns)[0].id}\n\t\t\t\t\t\tcolumnTitlesToIds={columnTitlesToIds}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t<Text fontSize=\"sm\" ml={3} align=\"left\" color=\"#666666\" onClick={toggleTaskView}>\n\t\t\t\t\t+ Add Task\n\t\t\t\t</Text>\n\t\t\t</Box>\n\t\t</Flex>\n\t)\n}\n\nexport default TableView\n","import { useState, useEffect } from 'react'\nimport { Box, Flex, IconButton, Icon, useDisclosure } from '@chakra-ui/react'\nimport { HamburgerIcon } from '@chakra-ui/icons'\nimport { BsKanban, BsTable } from 'react-icons/bs'\nimport { DragDropContext } from 'react-beautiful-dnd'\nimport ColumnAddNew from './components/ColumnAddNew'\nimport BoardView from './views/BoardView'\nimport TableView from './views/TableView'\n\nconst Body = ({\n\ttaskListData,\n\tactiveList,\n\tdispatch,\n\ttoggleMenu,\n\tisSmallerThan768\n}) => {\n\tconst [data, setData] = useState(taskListData)\n\tconst { isOpen, onOpen, onClose } = useDisclosure()\n\tconst [view, setView] = useState('board')\n\n\tconst [columnTitlesToIds, setColumnTitlesToIds] = useState(createTwoWayMap(taskListData, taskListData.activeList))\n\n\tuseEffect(() => {\n\t\tsetData(taskListData)\n\t\tsetColumnTitlesToIds(\n\t\t\tcreateTwoWayMap(taskListData, taskListData.activeList)\n\t\t)\n\t}, [taskListData])\n\n\tfunction createTwoWayMap(taskListData, activeList) {\n\t\tif (taskListData.taskLists[activeList].columns)\n\t\t\treturn new Map(\n\t\t\t\tObject.values(taskListData.taskLists[activeList].columns)\n\t\t\t\t\t.map(column => [column.title, column.id])\n\t\t\t\t\t.concat(\n\t\t\t\t\t\tObject.values(\n\t\t\t\t\t\t\ttaskListData.taskLists[activeList].columns\n\t\t\t\t\t\t).map(column => [column.id, column.title])\n\t\t\t\t\t)\n\t\t\t)\n\t\telse return new Map()\n\t}\n\n\tconst handleOnDragEnd = result => {\n\t\tif (result.type === 'column') {\n\t\t\tdispatch({\n\t\t\t\ttype: 'moveColumn',\n\t\t\t\tpayload: {\n\t\t\t\t\tsourceIndex: result.source.index,\n\t\t\t\t\tdestinationIndex: result.destination.index,\n\t\t\t\t\tdraggableId: result.draggableId\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tif (result.type === 'task') {\n\t\t\tif (!result.destination) return\n\t\t\tdispatch({\n\t\t\t\ttype: 'moveTask',\n\t\t\t\tpayload: {\n\t\t\t\t\tsourceColumn: result.source.droppableId,\n\t\t\t\t\tsourceIndex: result.source.index,\n\t\t\t\t\tdestinationColumn: result.destination.droppableId,\n\t\t\t\t\tdestinationIndex: result.destination.index,\n\t\t\t\t\tdraggableId: result.draggableId\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tconst handleNewTask = (taskTitle, columnId) => {\n\t\tdispatch({\n\t\t\ttype: 'addTask',\n\t\t\tpayload: {\n\t\t\t\tactiveList,\n\t\t\t\ttaskTitle,\n\t\t\t\tcolumnId\n\t\t\t}\n\t\t})\n\t}\n\n\tconst handleDeleteTask = (columnId, taskId, index) => {\n\t\tdispatch({ type: 'deleteTask', payload: { columnId, taskId, index } })\n\t}\n\n\tconst handleColumnTitleChange = (columnId, columnName) => {\n\t\tdispatch({ type: 'renameColumn', payload: { columnId, columnName } })\n\t}\n\n\tconst handleDeleteColumn = typeAndPayload => {\n\t\tdispatch(typeAndPayload)\n\t}\n\n\tconst toggleView = () => {\n\t\tsetView(prevState => (prevState === 'board' ? 'table' : 'board'))\n\t}\n\n\tconst handleColorChange = (taskId, color) => {\n\t\t// activeList added here, not prop drilled to Task component\n\t\tdispatch({\n\t\t\ttype: 'changeTaskColor',\n\t\t\tpayload: { activeList, taskId, color }\n\t\t})\n\t}\n\n\tconst handleSubmitEditedTask = ({\n\t\ttaskId,\n\t\ttitle,\n\t\tcolor,\n\t\towner,\n\t\tcolumnId,\n\t\tsourceColumn,\n\t\tdestinationColumn,\n\t\tindex\n\t}) => {\n\t\tdispatch({\n\t\t\ttype: 'editTask',\n\t\t\tpayload: {\n\t\t\t\tcolumnId,\n\t\t\t\ttaskId,\n\t\t\t\ttitle,\n\t\t\t\tcolor,\n\t\t\t\towner,\n\t\t\t\tsourceColumn,\n\t\t\t\tdestinationColumn,\n\t\t\t\tindex\n\t\t\t}\n\t\t})\n\t}\n\n\tconst handleNewDetailedTask = ({ title, color, owner, columnId }) => {\n\t\tdispatch({\n\t\t\ttype: 'addDetailedTask',\n\t\t\tpayload: { columnId, title, color, owner }\n\t\t})\n\t}\n\n\treturn (\n\t\t<Box bg=\"#F4F4F4\" minWidth=\"fit-content\" width=\"100%\">\n\t\t\t<DragDropContext onDragEnd={handleOnDragEnd}>\n\t\t\t\t<ColumnAddNew\n\t\t\t\t\tisOpen={isOpen}\n\t\t\t\t\tonOpen={onOpen}\n\t\t\t\t\tonClose={onClose}\n\t\t\t\t\tactiveList={taskListData.activeList}\n\t\t\t\t\tdispatch={dispatch}\n\t\t\t\t/>\n\t\t\t\t<Flex direction=\"column\">\n\t\t\t\t\t<Flex mt={5} ml={5}>\n\t\t\t\t\t\t{isSmallerThan768 && (\n\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\tonClick={toggleMenu}\n\t\t\t\t\t\t\t\tisRound={true}\n\t\t\t\t\t\t\t\tsize=\"xs\"\n\t\t\t\t\t\t\t\tbgColor=\"#424874\"\n\t\t\t\t\t\t\t\tcolor=\"white\"\n\t\t\t\t\t\t\t\t_hover={{ bgColor: '#292D48' }}\n\t\t\t\t\t\t\t\ticon={<HamburgerIcon />}\n\t\t\t\t\t\t\t\tmr={5}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tisDisabled={view === 'board'}\n\t\t\t\t\t\t\tisRound={true}\n\t\t\t\t\t\t\tcolorScheme=\"blackAlpha\"\n\t\t\t\t\t\t\tonClick={toggleView}\n\t\t\t\t\t\t\tsize=\"xs\"\n\t\t\t\t\t\t\tmr={1}\n\t\t\t\t\t\t\ticon={<Icon as={BsKanban} />}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tisDisabled={view === 'table'}\n\t\t\t\t\t\t\tisRound={true}\n\t\t\t\t\t\t\tcolorScheme=\"blackAlpha\"\n\t\t\t\t\t\t\tsize=\"xs\"\n\t\t\t\t\t\t\tonClick={toggleView}\n\t\t\t\t\t\t\ticon={<Icon as={BsTable} />}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Flex>\n\t\t\t\t\t<Flex>\n\t\t\t\t\t\t{view === 'board' ? (\n\t\t\t\t\t\t\t<BoardView\n\t\t\t\t\t\t\t\tdata={data.taskLists[activeList]}\n\t\t\t\t\t\t\t\tonOpen={onOpen}\n\t\t\t\t\t\t\t\tdispatch={dispatch}\n\t\t\t\t\t\t\t\tonDrop={handleOnDragEnd}\n\t\t\t\t\t\t\t\tonColumnSubmit={handleColumnTitleChange}\n\t\t\t\t\t\t\t\tonAddTask={handleNewTask}\n\t\t\t\t\t\t\t\tonColorChange={handleColorChange}\n\t\t\t\t\t\t\t\tonDeleteColumn={handleDeleteColumn}\n\t\t\t\t\t\t\t\tonDeleteTask={handleDeleteTask}\n\t\t\t\t\t\t\t\tonSubmitEditedTask={handleSubmitEditedTask}\n\t\t\t\t\t\t\t\tcolumnTitlesToIds={columnTitlesToIds}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<TableView\n\t\t\t\t\t\t\t\tdata={data.taskLists[activeList]}\n\t\t\t\t\t\t\t\tcolumnTitlesToIds={columnTitlesToIds}\n\t\t\t\t\t\t\t\tonAddNewDetailedTask={handleNewDetailedTask}\n\t\t\t\t\t\t\t\tonSubmitEditedTask={handleSubmitEditedTask}\n\t\t\t\t\t\t\t\tonDeleteTask={handleDeleteTask}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Flex>\n\t\t\t\t</Flex>\n\t\t\t</DragDropContext>\n\t\t</Box>\n\t)\n}\n\nexport default Body\n","import { useState, useRef, useEffect } from 'react'\nimport { Flex, Input } from '@chakra-ui/react'\n\nconst ListAddNew = ({ hideInput, isOpen, onSubmit }) => {\n\tconst [listName, setListName] = useState('')\n\tconst inputRef = useRef()\n\n\tuseEffect(() => {\n\t\tif (isOpen) {\n\t\t\tinputRef.current.focus()\n\t\t}\n\t}, [isOpen])\n\n\tconst handleChange = event => {\n\t\tsetListName(event.target.value)\n\t}\n\n\tconst handleSubmit = event => {\n\t\tevent.preventDefault()\n\t\tif (listName.trim().length > 0) {\n\t\t\tonSubmit({ type: 'addList', payload: listName })\n\t\t\tsetListName('')\n\t\t\thideInput()\n\t\t} else {\n\t\t\thideInput()\n\t\t}\n\t}\n\n\tconst handleBlur = () => {\n\t\thideInput()\n\t}\n\n\treturn (\n\t\t<form onSubmit={handleSubmit}>\n\t\t\t<Flex>\n\t\t\t\t<Input\n\t\t\t\t\tref={inputRef}\n\t\t\t\t\tvalue={listName}\n\t\t\t\t\tplaceholder=\"List name\"\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\tcolorScheme=\"whiteAlpha\"\n\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\tml={5}\n\t\t\t\t\tmr={5}\n\t\t\t\t\tmt={3}\n\t\t\t\t/>\n\t\t\t</Flex>\n\t\t</form>\n\t)\n}\n\nexport default ListAddNew\n","import { useState, useRef, useEffect } from 'react'\nimport { Draggable } from 'react-beautiful-dnd'\nimport { Formik, Form, Field } from 'formik'\nimport {\n\tBox,\n\tFormControl,\n\tFlex,\n\tIconButton,\n\tInput,\n\tText\n} from '@chakra-ui/react'\nimport { DeleteIcon, EditIcon } from '@chakra-ui/icons'\n\nconst TaskListItem = ({\n\tlistName,\n\tindex,\n\tactiveList,\n\tonListSwitch,\n\tonListSubmit,\n\tonDelete\n}) => {\n\tconst [optionsAreOpen, setOptionsAreOpen] = useState(false)\n\tconst [isEditing, setIsEditing] = useState(false)\n\tconst inputRef = useRef()\n\n\tuseEffect(() => {\n\t\tif (isEditing) {\n\t\t\tinputRef.current.focus()\n\t\t}\n\t}, [isEditing])\n\n\tconst toggleOptions = event => {\n\t\tif (event.type === 'mouseover' || event.type === 'mouseenter') {\n\t\t\tsetOptionsAreOpen(true)\n\t\t}\n\t\tif (event.type === 'mouseleave') {\n\t\t\tsetOptionsAreOpen(false)\n\t\t}\n\t}\n\n\tconst handleDelete = () => {\n\t\tonDelete({ type: 'deleteList', payload: listName })\n\t}\n\n\tconst handleEdit = () => {\n\t\tsetIsEditing(true)\n\t}\n\n\tconst editListField = (\n\t\t<Formik\n\t\t\tinitialValues={{ listName }}\n\t\t\tvalidate={values => {\n\t\t\t\tconst errors = {}\n\t\t\t\tif (!values.listName) {\n\t\t\t\t\terrors.listName = 'Required'\n\t\t\t\t}\n\t\t\t\treturn errors\n\t\t\t}}\n\t\t\tonSubmit={values => {\n\t\t\t\tonListSubmit({\n\t\t\t\t\ttype: 'renameList',\n\t\t\t\t\tpayload: { listName, newName: values.listName }\n\t\t\t\t})\n\t\t\t}}>\n\t\t\t{({ handleSubmit, errors }) => (\n\t\t\t\t<Form>\n\t\t\t\t\t<Field name=\"listName\">\n\t\t\t\t\t\t{({ field }) => (\n\t\t\t\t\t\t\t<FormControl isInvalid={errors.listName}>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\tref={inputRef}\n\t\t\t\t\t\t\t\t\tname=\"listName\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"List name\"\n\t\t\t\t\t\t\t\t\tonBlur={handleSubmit}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Field>\n\t\t\t\t</Form>\n\t\t\t)}\n\t\t</Formik>\n\t)\n\n\treturn (\n\t\t<Draggable draggableId={listName} index={index}>\n\t\t\t{provided => (\n\t\t\t\t<Flex\n\t\t\t\t\theight=\"50px\"\n\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\t{...provided.draggableProps}\n\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t{...provided.dragHandleProps}\n\t\t\t\t\tonMouseEnter={toggleOptions}\n\t\t\t\t\tonMouseOver={toggleOptions}\n\t\t\t\t\tonMouseLeave={toggleOptions}>\n\t\t\t\t\t{isEditing ? (\n\t\t\t\t\t\teditListField\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Flex\n\t\t\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\t\t\tjustify=\"space-between\"\n\t\t\t\t\t\t\tflexGrow={1}\n\t\t\t\t\t\t\tkey={listName}\n\t\t\t\t\t\t\tpt={0}\n\t\t\t\t\t\t\tpl={5}\n\t\t\t\t\t\t\tpr={0}\n\t\t\t\t\t\t\talign=\"center\"\n\t\t\t\t\t\t\t{...(listName === activeList\n\t\t\t\t\t\t\t\t? { as: 'b', bgColor: '#292D48' }\n\t\t\t\t\t\t\t\t: '')}>\n\t\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\t\tcursor=\"pointer\"\n\t\t\t\t\t\t\t\tsize=\"md\"\n\t\t\t\t\t\t\t\taria-label=\"Task list selector\"\n\t\t\t\t\t\t\t\tcolor=\"white\"\n\t\t\t\t\t\t\t\tonClick={onListSwitch}\n\t\t\t\t\t\t\t\t{...(listName.length > 20 && {\n\t\t\t\t\t\t\t\t\tisTruncated: true\n\t\t\t\t\t\t\t\t})}>\n\t\t\t\t\t\t\t\t{listName}\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t<Box width={75} mr={1}>\n\t\t\t\t\t\t\t\t{optionsAreOpen ? (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\t\t\tcolorScheme=\"whiteAlpha\"\n\t\t\t\t\t\t\t\t\t\t\tsize=\"xs\"\n\t\t\t\t\t\t\t\t\t\t\tbg=\"transparent\"\n\t\t\t\t\t\t\t\t\t\t\tisRound={true}\n\t\t\t\t\t\t\t\t\t\t\tonClick={handleEdit}\n\t\t\t\t\t\t\t\t\t\t\ticon={<EditIcon />}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\t\t\tcolorScheme=\"whiteAlpha\"\n\t\t\t\t\t\t\t\t\t\t\tisRound={true}\n\t\t\t\t\t\t\t\t\t\t\tsize=\"xs\"\n\t\t\t\t\t\t\t\t\t\t\tbg=\"transparent\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={handleDelete}\n\t\t\t\t\t\t\t\t\t\t\ticon={<DeleteIcon />}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\t\t\tsize=\"xs\"\n\t\t\t\t\t\t\t\t\t\t\tbg=\"transparent\"\n\t\t\t\t\t\t\t\t\t\t\tisRound={true}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\t\t\tsize=\"xs\"\n\t\t\t\t\t\t\t\t\t\t\tbg=\"transparent\"\n\t\t\t\t\t\t\t\t\t\t\tisRound={true}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</Flex>\n\t\t\t\t\t)}\n\t\t\t\t\t{provided.placeholder}\n\t\t\t\t</Flex>\n\t\t\t)}\n\t\t</Draggable>\n\t)\n}\n\nexport default TaskListItem\n","import { useState } from 'react'\nimport { Flex, Text } from '@chakra-ui/react'\nimport ListAddNew from '../components/ListAddNew'\nimport TaskListItem from './TaskListItem'\nimport { Droppable } from 'react-beautiful-dnd'\n\nconst TaskListOverview = ({\n\ttaskLists,\n\tactiveList,\n\tonListSwitch,\n\tdispatch\n}) => {\n\tconst [isOpen, setIsOpen] = useState(false)\n\tconst toggleAddList = () => {\n\t\tsetIsOpen(prevState => !prevState)\n\t}\n\n\tconst handleList = typeAndPayload => {\n\t\tdispatch(typeAndPayload)\n\t}\n\n\treturn (\n\t\t<Droppable droppableId=\"board\" type=\"column\" direction=\"vertical\">\n\t\t\t{provided => (\n\t\t\t\t<Flex\n\t\t\t\t\tdirection=\"column\"\n\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t{...provided.droppableProps}>\n\t\t\t\t\t{taskLists.map((listName, index) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<TaskListItem\n\t\t\t\t\t\t\t\tkey={listName}\n\t\t\t\t\t\t\t\tid={listName}\n\t\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\t\tlistName={listName}\n\t\t\t\t\t\t\t\tonDelete={handleList}\n\t\t\t\t\t\t\t\tonListSubmit={handleList}\n\t\t\t\t\t\t\t\tactiveList={activeList}\n\t\t\t\t\t\t\t\tonListSwitch={onListSwitch}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t\t{provided.placeholder}\n\t\t\t\t\t{!isOpen ? (\n\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\tpt={3}\n\t\t\t\t\t\t\tpb={3}\n\t\t\t\t\t\t\tpl={5}\n\t\t\t\t\t\t\tpr={5}\n\t\t\t\t\t\t\tsize=\"md\"\n\t\t\t\t\t\t\tcolor=\"white\"\n\t\t\t\t\t\t\tonClick={toggleAddList}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t+ Add List\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<ListAddNew\n\t\t\t\t\t\t\tpt={3}\n\t\t\t\t\t\t\tpb={3}\n\t\t\t\t\t\t\tpl={5}\n\t\t\t\t\t\t\tpr={5}\n\t\t\t\t\t\t\tonSubmit={handleList}\n\t\t\t\t\t\t\thideInput={toggleAddList}\n\t\t\t\t\t\t\tisOpen={isOpen}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</Flex>\n\t\t\t)}\n\t\t</Droppable>\n\t)\n}\n\nexport default TaskListOverview\n","import { Flex, Heading, IconButton } from '@chakra-ui/react'\nimport { DragDropContext } from 'react-beautiful-dnd'\nimport { CloseIcon } from '@chakra-ui/icons'\nimport TaskListOverview from '../components/TaskListOverview'\n\nconst SideBar = ({\n\ttaskLists,\n\tactiveList,\n\tonListSwitch,\n\tdispatch,\n\tmenuIsToggled,\n\ttoggleMenu\n}) => {\n\tconst handleOnDragEnd = result => {\n\t\tif (!result.destination) return\n\t\tdispatch({\n\t\t\ttype: 'moveList',\n\t\t\tpayload: {\n\t\t\t\tsourceIndex: result.source.index,\n\t\t\t\tdestinationIndex: result.destination.index,\n\t\t\t\tdraggableId: result.draggableId\n\t\t\t}\n\t\t})\n\t}\n\n\treturn (\n\t\t<DragDropContext onDragEnd={handleOnDragEnd}>\n\t\t\t<Flex\n\t\t\t\tdirection=\"column\"\n\t\t\t\tbg=\"#424874\"\n\t\t\t\tminHeight=\"100vh\"\n\t\t\t\tw={{ base: '100%', md: 'auto', lg: '25%', xl: '20%' }}>\n\t\t\t\t<Flex justify=\"space-between\">\n\t\t\t\t\t<Heading\n\t\t\t\t\t\tsize=\"md\"\n\t\t\t\t\t\tmb={3}\n\t\t\t\t\t\tmt={5}\n\t\t\t\t\t\tml={5}\n\t\t\t\t\t\tmr={5}\n\t\t\t\t\t\tcolor=\"white\">\n\t\t\t\t\t\tTask Lists\n\t\t\t\t\t</Heading>\n\t\t\t\t\t{menuIsToggled ? (\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tmt={5}\n\t\t\t\t\t\t\tmr={5}\n\t\t\t\t\t\t\tcolorScheme=\"whiteAlpha\"\n\t\t\t\t\t\t\tonClick={toggleMenu}\n\t\t\t\t\t\t\tsize=\"xs\"\n\t\t\t\t\t\t\tisRound={true}\n\t\t\t\t\t\t\ticon={<CloseIcon />}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tmt={5}\n\t\t\t\t\t\t\tmr={5}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</Flex>\n\t\t\t\t<TaskListOverview\n\t\t\t\t\ttaskLists={taskLists}\n\t\t\t\t\tactiveList={activeList}\n\t\t\t\t\tdispatch={dispatch}\n\t\t\t\t\tonListSwitch={onListSwitch}\n\t\t\t\t/>\n\t\t\t</Flex>\n\t\t</DragDropContext>\n\t)\n}\n\nexport default SideBar\n","import { v4 as uuidv4 } from 'uuid'\nimport update from 'immutability-helper'\nimport { doc, setDoc } from 'firebase/firestore'\nimport { db } from '../index'\n\nconst fakeUserId = 'userId'\n\nconst updateFirebase = async updatedState => {\n\ttry {\n\t\tawait setDoc(doc(db, fakeUserId, 'taskListData'), updatedState)\n\t} catch (err) {\n\t\tconsole.error(`Error updating document: ${err}`)\n\t}\n}\n\nconst taskReducer = (state, action) => {\n\tlet updatedState\n\tlet stateCopy = { ...state }\n\tswitch (action.type) {\n\t\tcase 'loadData':\n\t\t\treturn action.payload\n\t\t// list-level actions\n\t\tcase 'addList':\n\t\t\tconst newListObj = {\n\t\t\t\t[action.payload]: {\n\t\t\t\t\tname: action.payload,\n\t\t\t\t\ttasks: {},\n\t\t\t\t\tcolumns: {},\n\t\t\t\t\tcolumnOrder: []\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tupdatedState = update(state, {\n\t\t\t\ttaskLists: { $merge: newListObj },\n\t\t\t\tlistOrder: { $push: [action.payload] },\n\t\t\t\tactiveList: { $set: action.payload }\n\t\t\t})\n\n\t\t\tupdateFirebase(updatedState)\n\n\t\t\treturn updatedState\n\n\t\tcase 'deleteList':\n\t\t\tconst indexToDelete = state.listOrder.findIndex(\n\t\t\t\ttaskList => taskList === action.payload\n\t\t\t)\n\t\t\tif (state.activeList === action.payload) {\n\t\t\t\tconst newActiveList = state.listOrder.find(\n\t\t\t\t\ttaskList => taskList !== action.payload\n\t\t\t\t)\n\t\t\t\tupdatedState = update(state, {\n\t\t\t\t\tactiveList: { $set: newActiveList },\n\t\t\t\t\ttaskLists: { $unset: [action.payload] },\n\t\t\t\t\tlistOrder: { $splice: [[indexToDelete, 1]] }\n\t\t\t\t})\n\t\t\t\tupdateFirebase(updatedState)\n\t\t\t\treturn updatedState\n\t\t\t} else {\n\t\t\t\tupdatedState = update(state, {\n\t\t\t\t\ttaskLists: { $unset: [action.payload] },\n\t\t\t\t\tlistOrder: { $splice: [[indexToDelete, 1]] }\n\t\t\t\t})\n\t\t\t\tupdateFirebase(updatedState)\n\t\t\t\treturn updatedState\n\t\t\t}\n\t\tcase 'renameList':\n\t\t\t// update taskListName (activeList, taskList property name, taskList.name value)\n\t\t\tconst renameProp = (\n\t\t\t\toldProp,\n\t\t\t\tnewProp,\n\t\t\t\t{ [oldProp]: old, ...others }\n\t\t\t) => ({\n\t\t\t\t// source: https://medium.com/front-end-weekly/immutably-rename-object-keys-in-javascript-5f6353c7b6dd\n\t\t\t\t[newProp]: old,\n\t\t\t\t...others\n\t\t\t})\n\t\t\tconst updatedTaskListNames = renameProp(\n\t\t\t\t[action.payload.listName],\n\t\t\t\t[action.payload.newName],\n\t\t\t\tstate.taskLists\n\t\t\t)\n\t\t\tupdatedTaskListNames[action.payload.newName].name =\n\t\t\t\taction.payload.newName\n\n\t\t\tconst currentIndex = state.listOrder.findIndex(\n\t\t\t\tlist => list === action.payload.listName\n\t\t\t)\n\n\t\t\tupdatedState = update(state, {\n\t\t\t\ttaskLists: { $set: updatedTaskListNames },\n\t\t\t\tlistOrder: {\n\t\t\t\t\t$splice: [[currentIndex, 1, action.payload.newName]]\n\t\t\t\t},\n\t\t\t\tactiveList: { $set: action.payload.newName }\n\t\t\t})\n\t\t\tupdateFirebase(updatedState)\n\t\t\treturn updatedState\n\t\tcase 'selectList':\n\t\t\tupdatedState = update(state, {\n\t\t\t\tactiveList: { $set: action.payload.selectedList }\n\t\t\t})\n\t\t\tupdateFirebase(updatedState)\n\t\t\treturn updatedState\n\n\t\tcase 'moveList':\n\t\t\t// not using immutability-helper splice due to expected flickering issue (see moveColumn)\n\t\t\tstateCopy.listOrder.splice(action.payload.sourceIndex, 1)\n\t\t\tstateCopy.listOrder.splice(\n\t\t\t\taction.payload.destinationIndex,\n\t\t\t\t0,\n\t\t\t\taction.payload.draggableId\n\t\t\t)\n\t\t\tupdatedState = stateCopy\n\t\t\tupdateFirebase(updatedState)\n\t\t\treturn updatedState\n\n\t\t// column-level actions\n\t\tcase 'addColumn':\n\t\t\tconst newColumn = {\n\t\t\t\tid: uuidv4(),\n\t\t\t\ttitle: action.payload.columnName,\n\t\t\t\ttaskIds: []\n\t\t\t}\n\n\t\t\tupdatedState = update(state, {\n\t\t\t\ttaskLists: {\n\t\t\t\t\t[action.payload.activeList]: {\n\t\t\t\t\t\tcolumns: {\n\t\t\t\t\t\t\t$merge: {\n\t\t\t\t\t\t\t\t[newColumn.id]: newColumn\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcolumnOrder: { $push: [newColumn.id] }\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\tupdateFirebase(updatedState)\n\t\t\treturn updatedState\n\t\tcase 'moveColumn':\n\t\t\t// not using immutability-helper splice due to flickering issue\n\t\t\tstateCopy.taskLists[state.activeList].columnOrder.splice(\n\t\t\t\taction.payload.sourceIndex,\n\t\t\t\t1\n\t\t\t)\n\t\t\tstateCopy.taskLists[state.activeList].columnOrder.splice(\n\t\t\t\taction.payload.destinationIndex,\n\t\t\t\t0,\n\t\t\t\taction.payload.draggableId\n\t\t\t)\n\t\t\tupdatedState = stateCopy\n\t\t\tupdateFirebase(updatedState)\n\t\t\treturn updatedState\n\n\t\tcase 'renameColumn':\n\t\t\tupdatedState = update(state, {\n\t\t\t\ttaskLists: {\n\t\t\t\t\t[state.activeList]: {\n\t\t\t\t\t\tcolumns: {\n\t\t\t\t\t\t\t[action.payload.columnId]: {\n\t\t\t\t\t\t\t\ttitle: { $set: action.payload.columnName }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\tupdateFirebase(updatedState)\n\t\t\treturn updatedState\n\t\tcase 'deleteColumn':\n\t\t\tupdatedState = update(state, {\n\t\t\t\ttaskLists: {\n\t\t\t\t\t[state.activeList]: {\n\t\t\t\t\t\tcolumns: {\n\t\t\t\t\t\t\t$unset: [action.payload.columnId]\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcolumnOrder: { $splice: [[action.payload.index, 1]] }\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\tupdateFirebase(updatedState)\n\t\t\treturn updatedState\n\n\t\t// task-level actions\n\t\tcase 'addTask':\n\t\t\tconst newTask = {\n\t\t\t\tid: uuidv4(),\n\t\t\t\ttitle: action.payload.taskTitle,\n\t\t\t\tcolor: '#EAEAEA',\n\t\t\t\towner: ''\n\t\t\t}\n\n\t\t\tupdatedState = update(state, {\n\t\t\t\ttaskLists: {\n\t\t\t\t\t[state.activeList]: {\n\t\t\t\t\t\ttasks: { $merge: { [newTask.id]: newTask } },\n\t\t\t\t\t\tcolumns: {\n\t\t\t\t\t\t\t[action.payload.columnId]: {\n\t\t\t\t\t\t\t\ttaskIds: { $push: [newTask.id] }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\tupdateFirebase(updatedState)\n\t\t\treturn updatedState\n\n\t\tcase 'addDetailedTask':\n\t\t\tconst newDetailedTask = {\n\t\t\t\tid: uuidv4(),\n\t\t\t\ttitle: action.payload.title,\n\t\t\t\tcolor: action.payload.color,\n\t\t\t\towner: action.payload.owner\n\t\t\t}\n\n\t\t\tupdatedState = update(state, {\n\t\t\t\ttaskLists: {\n\t\t\t\t\t[state.activeList]: {\n\t\t\t\t\t\ttasks: {\n\t\t\t\t\t\t\t$merge: { [newDetailedTask.id]: newDetailedTask }\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcolumns: {\n\t\t\t\t\t\t\t[action.payload.columnId]: {\n\t\t\t\t\t\t\t\ttaskIds: { $push: [newDetailedTask.id] }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\tupdateFirebase(updatedState)\n\t\t\treturn updatedState\n\n\t\tcase 'moveTask':\n\t\t\t// not using immutability-helper splice due to expected flickering issue (see moveColumn)\n\t\t\tconst {\n\t\t\t\tsourceColumn,\n\t\t\t\tsourceIndex,\n\t\t\t\tdestinationColumn,\n\t\t\t\tdestinationIndex,\n\t\t\t\tdraggableId\n\t\t\t} = action.payload\n\n\t\t\tstateCopy.taskLists[stateCopy.activeList].columns[\n\t\t\t\tsourceColumn\n\t\t\t].taskIds.splice(sourceIndex, 1)\n\t\t\tstateCopy.taskLists[stateCopy.activeList].columns[\n\t\t\t\tdestinationColumn\n\t\t\t].taskIds.splice(destinationIndex, 0, draggableId)\n\n\t\t\tupdatedState = stateCopy\n\t\t\tupdateFirebase(updatedState)\n\t\t\treturn updatedState\n\n\t\t// TODO: fix lagging move of +Add Task on moving last task from column\n\t\tcase 'editTask':\n\t\t\tconst updatedTask = {\n\t\t\t\tid: action.payload.taskId,\n\t\t\t\ttitle: action.payload.title,\n\t\t\t\tcolor: action.payload.color,\n\t\t\t\towner: action.payload.owner\n\t\t\t}\n\t\t\tif (\n\t\t\t\taction.payload.sourceColumn !== action.payload.destinationColumn\n\t\t\t) {\n\t\t\t\tupdatedState = update(state, {\n\t\t\t\t\ttaskLists: {\n\t\t\t\t\t\t[state.activeList]: {\n\t\t\t\t\t\t\ttasks: {\n\t\t\t\t\t\t\t\t[action.payload.taskId]: { $set: updatedTask }\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tcolumns: {\n\t\t\t\t\t\t\t\t[action.payload.sourceColumn]: {\n\t\t\t\t\t\t\t\t\ttaskIds: {\n\t\t\t\t\t\t\t\t\t\t$splice: [[action.payload.index, 1]]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t[action.payload.destinationColumn]: {\n\t\t\t\t\t\t\t\t\ttaskIds: { $push: [action.payload.taskId] }\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tupdateFirebase(updatedState)\n\t\t\t\treturn updatedState\n\t\t\t} else\n\t\t\t\tupdatedState = update(state, {\n\t\t\t\t\ttaskLists: {\n\t\t\t\t\t\t[state.activeList]: {\n\t\t\t\t\t\t\ttasks: {\n\t\t\t\t\t\t\t\t[action.payload.taskId]: { $set: updatedTask }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\tupdateFirebase(updatedState)\n\t\t\treturn updatedState\n\t\tcase 'deleteTask':\n\t\t\tupdatedState = update(state, {\n\t\t\t\ttaskLists: {\n\t\t\t\t\t[state.activeList]: {\n\t\t\t\t\t\ttasks: { $unset: [action.payload.taskId] },\n\t\t\t\t\t\tcolumns: {\n\t\t\t\t\t\t\t[action.payload.columnId]: {\n\t\t\t\t\t\t\t\ttaskIds: {\n\t\t\t\t\t\t\t\t\t$splice: [[action.payload.index, 1]]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\tupdateFirebase(updatedState)\n\t\t\treturn updatedState\n\t\tcase 'changeTaskColor':\n\t\t\tupdatedState = update(state, {\n\t\t\t\ttaskLists: {\n\t\t\t\t\t[state.activeList]: {\n\t\t\t\t\t\ttasks: {\n\t\t\t\t\t\t\t[action.payload.taskId]: {\n\t\t\t\t\t\t\t\tcolor: { $set: action.payload.color }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\tupdateFirebase(updatedState)\n\t\t\treturn updatedState\n\t\tdefault:\n\t\t\tthrow new Error()\n\t}\n}\n\nexport default taskReducer\n","import { useEffect, useState, useReducer, useRef } from 'react'\nimport Body from './Body'\nimport SideBar from './layout/SideBar'\nimport { Flex, useMediaQuery } from '@chakra-ui/react'\n// import initialState from './data'\nimport taskReducer from './reducers/task-reducer'\nimport { doc, getDoc } from 'firebase/firestore'\nimport { db } from './index'\n\nconst activeUser = 'userId'\n\nconst App = () => {\n\tconst [appData, dispatch] = useReducer(taskReducer, {\n\t\tlistOrder: [],\n\t\ttaskLists: {},\n\t\tactiveList: ''\n\t})\n\tconst isFirstRender = useRef(true)\n\n\tuseEffect(() => {\n\t\tif (isFirstRender) {\n\t\t\tconst loadData = async () => {\n\t\t\t\tconst getFirebaseData = async uuid => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst retrievedDoc = await getDoc(\n\t\t\t\t\t\t\tdoc(db, uuid, 'taskListData')\n\t\t\t\t\t\t)\n\t\t\t\t\t\treturn retrievedDoc.data()\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\tconsole.error(`Failed to load user data: ${err}`)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst userData = await getFirebaseData(activeUser)\n\t\t\t\tdispatch({ type: 'loadData', payload: userData })\n\t\t\t}\n\t\t\tloadData()\n\t\t}\n\t\tisFirstRender.current = false\n\t\tsetIsLoading(false)\n\t}, [])\n\n\tconst [isLoading, setIsLoading] = useState(true)\n\tconst [menuIsToggled, setMenuIsToggled] = useState(false)\n\tconst [isSmallerThan768] = useMediaQuery('(max-width: 767px)')\n\n\tconst handleListSwitch = event => {\n\t\tdispatch({\n\t\t\ttype: 'selectList',\n\t\t\tpayload: { selectedList: event.target.innerText }\n\t\t})\n\t}\n\n\tconst toggleMenu = () => {\n\t\tsetMenuIsToggled(prevState => !prevState)\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{isLoading ? (\n\t\t\t\t'Loading...'\n\t\t\t) : (\n\t\t\t\t<Flex direction={{ base: 'column', md: 'row' }}>\n\t\t\t\t\t{(!isSmallerThan768 || menuIsToggled) && (\n\t\t\t\t\t\t<SideBar\n\t\t\t\t\t\t\ttaskLists={appData.listOrder}\n\t\t\t\t\t\t\tactiveList={appData.activeList}\n\t\t\t\t\t\t\tonListSwitch={handleListSwitch}\n\t\t\t\t\t\t\tdispatch={dispatch}\n\t\t\t\t\t\t\tmenuIsToggled={menuIsToggled}\n\t\t\t\t\t\t\ttoggleMenu={toggleMenu}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t{appData.activeList\n\t\t\t\t\t\t? !menuIsToggled && (\n\t\t\t\t\t\t\t\t<Body\n\t\t\t\t\t\t\t\t\ttaskListData={appData}\n\t\t\t\t\t\t\t\t\tactiveList={appData.activeList}\n\t\t\t\t\t\t\t\t\tdispatch={dispatch}\n\t\t\t\t\t\t\t\t\ttoggleMenu={toggleMenu}\n\t\t\t\t\t\t\t\t\tmenuIsToggled={menuIsToggled}\n\t\t\t\t\t\t\t\t\tisSmallerThan768={isSmallerThan768}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t  )\n\t\t\t\t\t\t: 'Please add a list to get started'}\n\t\t\t\t</Flex>\n\t\t\t)}\n\t\t</>\n\t)\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ChakraProvider, ColorModeScript } from '@chakra-ui/react'\nimport App from './App'\nimport theme from './theme'\nimport { initializeApp } from 'firebase/app'\nimport { getFirestore } from 'firebase/firestore'\n\nconst app = initializeApp({\n\tapiKey: 'AIzaSyDwkoDdGaD7u9en9tnXKizNQYlTdEHLaBE',\n\tauthDomain: 'kanban-218d1.firebaseapp.com',\n\tdatabaseURL:\n\t\t'https://kanban-218d1-default-rtdb.europe-west1.firebasedatabase.app',\n\tprojectId: 'kanban-218d1',\n\tstorageBucket: 'kanban-218d1.appspot.com',\n\tmessagingSenderId: '759366593327',\n\tappId: '1:759366593327:web:0da81e7b41d2097ca70fda',\n\tmeasurementId: 'G-XZSFXHBR8L'\n})\n\nexport const db = getFirestore(app)\n\nReactDOM.render(\n  <React.StrictMode>\n\t\t<ColorModeScript initialColorMode={theme.config.initialColorMode} />\n\t\t<ChakraProvider theme={theme}>\n\t\t\t<App />\n\t\t</ChakraProvider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n  )\n"],"sourceRoot":""}